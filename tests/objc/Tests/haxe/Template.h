//
//  Template
//  Tests
//
//  Source generated by Haxe Objective-C target
//

typedef enum{
	OpVar,
	OpExpr,
	OpIf,
	OpStr,
	OpBlock,
	OpForeach,
	OpMacro
} TemplateExpr;

#import <Foundation/Foundation.h>


@interface Template : HXObject

+ (EReg*) splitter:(EReg*)val;
+ (EReg*) expr_splitter:(EReg*)val;
+ (EReg*) expr_trim:(EReg*)val;
+ (EReg*) expr_int:(EReg*)val;
+ (EReg*) expr_float:(EReg*)val;
+ (id) globals:(id)val;
@property (nonatomic, strong) Template *expr;
@property (nonatomic) id context;
@property (nonatomic) id macros;
@property (nonatomic, strong) List *stack;
@property (nonatomic, strong) StringBuf *buf;
- (NSMutableString*) execute:(id)context macros:(id)macros;
- (id) resolve:(NSMutableString*)v;
- (List*) parseTokens:(NSMutableString*)data;
- (Template*) parseBlock:(List*)tokens;
- (Template*) parse:(List*)tokens;
- (SEL) parseExpr:(NSMutableString*)data;
- (SEL) makeConst:(NSMutableString*)v;
- (SEL) makePath:(SEL)e l:(List*)l;
- (SEL) makeExpr:(List*)l;
- (SEL) makeExpr2:(List*)l;
- (void) run:(Template*)e;
- (id) init:(NSMutableString*)str;

@end

