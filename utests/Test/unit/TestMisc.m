//
//  TestMisc
//  Test
//
//  Source generated by Haxe Objective-C target
//

#import "../unit/TestMisc.h"

@implementation MyDynamicClass

static int Z;
+ (int) Z {
	if (Z == nil) Z = 10;
	return Z;
}
+ (void) setZ:(int)val {
	Z = val;
}
// Defining a dynamic method
+ (int) staticDynamic:(int)x y:(int)y{
	return -TMono- + x + y;
}
@synthesize property_staticDynamic;


+ (int) get_W{
	return MyDynamicClass.W + 2;
}
+ (int) set_W:(int)v{
	MyDynamicClass.W = v;
	return v;
}
@synthesize v;
- (int) get{
	return self.v;
}
// Defining a dynamic method
- (int) add:(int)x y:(int)y{
	return self.v + x + y;
}
@synthesize property_add;

- (int) iadd:(int)x y:(int)y{
	return self.v + x + y;
}
- (id) init:(int)v{
	self = [super init];
	self.v = v;
	return self;
}

@end

@implementation MyDynamicSubClass

// Defining a dynamic method
- (int) add:(int)x y:(int)y{
	return  (self.v + x + y) * 2;
}
@synthesize property_add;

- (id) init:(int)v{
	self = [super init];
	return self;
}

@end

@implementation MyDynamicSubClass2

// Defining a dynamic method
- (int) add:(int)x y:(int)y{
	return  (self.v + x + y) * 2;
}
@synthesize property_add;

- (id) init:(int)v{
	self = [super init];
	return self;
}

@end

@implementation MyOtherDynamicClass

- (id) init:(int)v{
	self = [super init];
	self.add = ^- (id) :(int)x y:(int)y{
		self = [super init];
		return x + y + 10;
		return self;
	}
}

@end

@implementation BaseDefArgs

- (int) get:(int)x{
	// Optional arguments
	if (!x) x = 3;
	
	return x;
}

@end

@implementation ExtDefArgs

- (int) get:(int)x{
	// Optional arguments
	if (!x) x = 7;
	
	return x;
}
- (id) init{
	self = [super init];
	return self;
}

@end

@implementation BaseConstrOpt

@synthesize s;
@synthesize i;
@synthesize b;
- (id) init:(NSMutableString*)s i:(int)i b:(BOOL)b{
	self = [super init];
	// Optional arguments
	if (!i) i = -5;
	if (!s) s = [NSMutableString stringWithString:@"test"];
	if (!b) b = YES;
	
	self.s = s;
	self.i = i;
	self.b = b;
	return self;
}

@end

@implementation SubConstrOpt

- (id) init{
	self = [super init];
	return self;
}

@end

@implementation SubConstrOpt2

- (id) init:(NSMutableString*)s i:(int)i b:(BOOL)b{
	self = [super init];
	// Optional arguments
	if (!i) i = nil;
	if (!s) s = nil;
	if (!b) b = nil;
	
	return self;
}

@end

@implementation SubConstrOpt3

- (id) init:(NSMutableString*)s i:(int)i{
	self = [super init];
	// Optional arguments
	if (!i) i = -6;
	if (!s) s = [NSMutableString stringWithString:@"test2"];
	
	return self;
}

@end

@implementation TestMisc

static NSMutableString* unit;
+ (NSMutableString*) unit {
	if (unit == nil) unit = [NSMutableString stringWithString:@"testing package conflict"];
	return unit;
}
+ (void) setUnit:(NSMutableString*)val {
	unit = val;
}
+ (int) foo:(int)x{
	return x + 5;
}

- (void) testPackageConflict{
	[self eq:-TMono- v2:[NSMutableString stringWithString:@"testing package conflict"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"112",@"lineNumber", @"unit.TestMisc",@"className", @"testPackageConflict",@"methodName", nil]];
	
	NSMutableString *unit1 = -TMono-;
	[self eq:unit1 v2:-TMono- pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"114",@"lineNumber", @"unit.TestMisc",@"className", @"testPackageConflict",@"methodName", nil]];
}
- (void) testDate{
	
	NSDate *d = [[NSDate alloc] init:2012 month:7 day:17 hour:1 min:2 sec:3];
	[self eq:[d getDay] v2:5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"119",@"lineNumber", @"unit.TestMisc",@"className", @"testDate",@"methodName", nil]];
	[self eq:[d getDate] v2:17 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"121",@"lineNumber", @"unit.TestMisc",@"className", @"testDate",@"methodName", nil]];
	[self eq:[d getMonth] v2:7 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"122",@"lineNumber", @"unit.TestMisc",@"className", @"testDate",@"methodName", nil]];
	[self eq:[d getFullYear] v2:2012 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"123",@"lineNumber", @"unit.TestMisc",@"className", @"testDate",@"methodName", nil]];
	[self eq:[d getHours] v2:1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"125",@"lineNumber", @"unit.TestMisc",@"className", @"testDate",@"methodName", nil]];
	[self eq:[d getMinutes] v2:2 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"126",@"lineNumber", @"unit.TestMisc",@"className", @"testDate",@"methodName", nil]];
	[self eq:[d getSeconds] v2:3 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"127",@"lineNumber", @"unit.TestMisc",@"className", @"testDate",@"methodName", nil]];
	[self eq:[d toString] v2:[NSMutableString stringWithString:@"2012-08-17 01:02:03"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"131",@"lineNumber", @"unit.TestMisc",@"className", @"testDate",@"methodName", nil]];
}
- (void) testClosure{
	
	MyClass *c = [[MyClass alloc] init:100];
	SEL add = add:y:;
	[self eq:[c add:1 y:2] v2:103 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"137",@"lineNumber", @"unit.TestMisc",@"className", @"testClosure",@"methodName", nil]];
	[self eq:[ (((SEL)($this:(snd ctx.path)) 
	NSMutableArray *f = [[NSMutableArray alloc] initWithObject:add:y:]
	__r__ = ^- (int) :(int)y{
		return [[f hx_objectAtIndex:0]:1 y:y];
	}
	return __r__{
		
		SEL* __r__}
	}(self))):2] v2:103 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"138",@"lineNumber", @"unit.TestMisc",@"className", @"testClosure",@"methodName", nil]];
	[self eq:[add:1 y:2] v2:103 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"139",@"lineNumber", @"unit.TestMisc",@"className", @"testClosure",@"methodName", nil]];
	
	NSMutableArray *x = [[NSMutableArray alloc] initWithObject:[NSNumber numberWithInt:4]];
	SEL f = ^- (int) {
		return [x hx_objectAtIndex:0];
	}
	[self eq:[f] v2:4 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"143",@"lineNumber", @"unit.TestMisc",@"className", @"testClosure",@"methodName", nil]];
	[x hx_objectAtIndex:0]++;
	[self eq:[f] v2:5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"145",@"lineNumber", @"unit.TestMisc",@"className", @"testClosure",@"methodName", nil]];
	id o = [NSMutableDictionary dictionaryWithObjectsAndKeys:
	[f copy], @"f",
	nil];
	[self eq:[o f] v2:5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"148",@"lineNumber", @"unit.TestMisc",@"className", @"testClosure",@"methodName", nil]];
	[self eq:o f v2:o f pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"149",@"lineNumber", @"unit.TestMisc",@"className", @"testClosure",@"methodName", nil]];
	id o1 = [NSMutableDictionary dictionaryWithObjectsAndKeys:
	[add:y: copy], @"add",
	nil];
	[self eq:[o1 add:1 y:2] v2:103 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"152",@"lineNumber", @"unit.TestMisc",@"className", @"testClosure",@"methodName", nil]];
	[self eq:o1 add v2:o1 add pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"153",@"lineNumber", @"unit.TestMisc",@"className", @"testClosure",@"methodName", nil]];
	id o2 = [NSMutableDictionary dictionaryWithObjectsAndKeys:
	[Mathcosf copy], @"cos",
	nil];
	[self eq:[o2 cos:0] v2:1. pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"156",@"lineNumber", @"unit.TestMisc",@"className", @"testClosure",@"methodName", nil]];
	SEL c1 =  C;
	[self t:[Type enumEq:[ C:1 b:[NSMutableString stringWithString:@"hello"]] b:[c1:1 b:[NSMutableString stringWithString:@"hello"]]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"160",@"lineNumber", @"unit.TestMisc",@"className", @"testClosure",@"methodName", nil]];
}
- (void) testCaptureUnique{
	SEL foo = nil; SEL bar = nil;
	BOOL flag = YES;
	if (flag) {
		
		NSMutableArray *x = [[NSMutableArray alloc] initWithObject:[NSNumber numberWithInt:1]];
		foo = ^- (int) {
			return [x hx_objectAtIndex:0];
		}
	}
	if (flag) {
		
		NSMutableArray *x = [[NSMutableArray alloc] initWithObject:[NSNumber numberWithInt:2]];
		bar = ^- (int) {
			return [x hx_objectAtIndex:0];
		}
	}
	[self eq:[foo] v2:1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"175",@"lineNumber", @"unit.TestMisc",@"className", @"testCaptureUnique",@"methodName", nil]];
	[self eq:[bar] v2:2 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"176",@"lineNumber", @"unit.TestMisc",@"className", @"testCaptureUnique",@"methodName", nil]];
}
- (void) testCaptureUnique2{
	SEL foo = ((SEL)($this:(snd ctx.path)) 
	NSMutableArray *f = [[NSMutableArray alloc] initWithObject:id:]
	__r__ = ^- (int) {
		return [[f hx_objectAtIndex:0]-TLazy call-];
	}
	return __r__{
		
		SEL* __r__}
	}(self));
	SEL bar = ((SEL)($this:(snd ctx.path)) 
	NSMutableArray *f = [[NSMutableArray alloc] initWithObject:sq:]
	__r__2 = ^- (int) {
		return [[f hx_objectAtIndex:0]-TLazy call-];
	}
	return __r__2{
		
		SEL* __r__2}
	}(self));
	[self eq:[foo] v2:3 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"183",@"lineNumber", @"unit.TestMisc",@"className", @"testCaptureUnique2",@"methodName", nil]];
	[self eq:[bar] v2:25 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"184",@"lineNumber", @"unit.TestMisc",@"className", @"testCaptureUnique2",@"methodName", nil]];
}
- (void) testSelfRef{
	
	NSMutableArray *bla = [[NSMutableArray alloc] initWithObject:[NSNumber numberWithInt:55]];
	SEL bla1 = ^- (int) {
		return [bla hx_objectAtIndex:0];
	}
	[self eq:[bla1] v2:55 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"191",@"lineNumber", @"unit.TestMisc",@"className", @"testSelfRef",@"methodName", nil]];
}
- (void) testHiddenType{
	int haxe1 = 20;
	[self eq:[Md5 encode:[NSMutableString stringWithString:@""]] v2:[NSMutableString stringWithString:@"d41d8cd98f00b204e9800998ecf8427e"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"196",@"lineNumber", @"unit.TestMisc",@"className", @"testHiddenType",@"methodName", nil]];
	[self eq:haxe1 v2:20 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"197",@"lineNumber", @"unit.TestMisc",@"className", @"testHiddenType",@"methodName", nil]];
	int Std = 50;
	[self eq:45 v2:45 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"199",@"lineNumber", @"unit.TestMisc",@"className", @"testHiddenType",@"methodName", nil]];
	[self eq:Std v2:50 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"200",@"lineNumber", @"unit.TestMisc",@"className", @"testHiddenType",@"methodName", nil]];
}
- (void) testHiddenTypeScope{
	BOOL flag = YES;
	if (flag) {
		int haxe = 20;
		int Std = 50;
		[self eq:haxe v2:20 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"208",@"lineNumber", @"unit.TestMisc",@"className", @"testHiddenTypeScope",@"methodName", nil]];
		[self eq:Std v2:50 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"209",@"lineNumber", @"unit.TestMisc",@"className", @"testHiddenTypeScope",@"methodName", nil]];
	}
	[self eq:[Md5 encode:[NSMutableString stringWithString:@""]] v2:[NSMutableString stringWithString:@"d41d8cd98f00b204e9800998ecf8427e"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"211",@"lineNumber", @"unit.TestMisc",@"className", @"testHiddenTypeScope",@"methodName", nil]];
	[self eq:45 v2:45 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"212",@"lineNumber", @"unit.TestMisc",@"className", @"testHiddenTypeScope",@"methodName", nil]];
}
- (void) testHiddenTypeCapture{
	BOOL flag = YES;
	SEL foo = nil; SEL bar = nil;
	if (flag) {
		
		NSMutableArray *haxe = [[NSMutableArray alloc] initWithObject:[NSNumber numberWithInt:20]];
		
		NSMutableArray *Std = [[NSMutableArray alloc] initWithObject:[NSNumber numberWithInt:50]];
		foo = ^- (int) {
			return [haxe hx_objectAtIndex:0];
		}
		bar = ^- (int) {
			return [Std hx_objectAtIndex:0];
		}
	}
	[self eq:[Md5 encode:[NSMutableString stringWithString:@""]] v2:[NSMutableString stringWithString:@"d41d8cd98f00b204e9800998ecf8427e"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"224",@"lineNumber", @"unit.TestMisc",@"className", @"testHiddenTypeCapture",@"methodName", nil]];
	[self eq:45 v2:45 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"225",@"lineNumber", @"unit.TestMisc",@"className", @"testHiddenTypeCapture",@"methodName", nil]];
	[self eq:[foo] v2:20 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"226",@"lineNumber", @"unit.TestMisc",@"className", @"testHiddenTypeCapture",@"methodName", nil]];
	[self eq:[bar] v2:50 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"227",@"lineNumber", @"unit.TestMisc",@"className", @"testHiddenTypeCapture",@"methodName", nil]];
}
- (int) _id:(int)x{
	return x;
}
- (int) sq:(int)x{
	return x * x;
}
- (void) testPropertyInit{
	[self eq:[MyDynamicClass get_W] v2:57 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"239",@"lineNumber", @"unit.TestMisc",@"className", @"testPropertyInit",@"methodName", nil]];
}
- (void) testInlineClosure{
	
	MyDynamicClass *inst = [[MyDynamicClass alloc] init:100];
	SEL add = iadd:y:;
	[self eq:inst.v + 1 + 2 v2:103 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"245",@"lineNumber", @"unit.TestMisc",@"className", @"testInlineClosure",@"methodName", nil]];
	[self eq:[add:1 y:2] v2:103 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"246",@"lineNumber", @"unit.TestMisc",@"className", @"testInlineClosure",@"methodName", nil]];
}
- (void) testDynamicClosure{
	
	MyDynamicClass *inst = [[MyDynamicClass alloc] init:100];
	SEL add = add:y:;
	[self eq:[inst add:1 y:2] v2:103 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"252",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	[self eq:[ (((SEL)($this:(snd ctx.path)) 
	NSMutableArray *f = [[NSMutableArray alloc] initWithObject:add:y:]
	__r__ = ^- (int) :(int)y{
		return [[f hx_objectAtIndex:0]:1 y:y];
	}
	return __r__{
		
		SEL* __r__}
	}(self))):2] v2:103 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"253",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	[self eq:[add:1 y:2] v2:103 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"254",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	
	MyDynamicSubClass *inst1 = [[MyDynamicSubClass alloc] init "-dynamic_param-" ];
	SEL add1 = add:y:;
	[self eq:[inst1 add:1 y:2] v2:206 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"259",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	[self eq:[ (((SEL)($this:(snd ctx.path)) 
	NSMutableArray *f = [[NSMutableArray alloc] initWithObject:add:y:]
	__r__2 = ^- (int) :(int)y{
		return [[f hx_objectAtIndex:0]:1 y:y];
	}
	return __r__2{
		
		SEL* __r__2}
	}(self))):2] v2:206 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"260",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	[self eq:[add1:1 y:2] v2:206 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"261",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	
	NSMutableArray *inst2 = [[NSMutableArray alloc] initWithObject:[[MyDynamicSubClass2 alloc] init "-dynamic_param-" ]];
	SEL add2 = add:y:;
	[self eq:[[inst2 hx_objectAtIndex:0] add:1 y:2] v2:206 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"266",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	[self eq:[ (((SEL)($this:(snd ctx.path)) 
	NSMutableArray *f = [[NSMutableArray alloc] initWithObject:add:y:]
	__r__3 = ^- (int) :(int)y{
		return [[f hx_objectAtIndex:0]:1 y:y];
	}
	return __r__3{
		
		SEL* __r__3}
	}(self))):2] v2:206 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"267",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	[self eq:[add2:1 y:2] v2:206 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"268",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	[inst2 hx_objectAtIndex:0].add = ^- (int) :(int)x y:(int)y{
		return [[inst2 hx_objectAtIndex:0] get] * 2 + x + y;
	}
	SEL add3 = add:y:;
	[self eq:[[inst2 hx_objectAtIndex:0] add:1 y:2] v2:203 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"273",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	[self eq:[ (((SEL)($this:(snd ctx.path)) 
	NSMutableArray *f = [[NSMutableArray alloc] initWithObject:add:y:]
	__r__4 = ^- (int) :(int)y{
		return [[f hx_objectAtIndex:0]:1 y:y];
	}
	return __r__4{
		
		SEL* __r__4}
	}(self))):2] v2:203 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"274",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	[self eq:[add3:1 y:2] v2:203 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"275",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	
	MyOtherDynamicClass *inst3 = [[MyOtherDynamicClass alloc] init:0];
	SEL add4 = add:y:;
	[self eq:[inst3 add:1 y:2] v2:13 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"280",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	[self eq:[ (((SEL)($this:(snd ctx.path)) 
	NSMutableArray *f = [[NSMutableArray alloc] initWithObject:add:y:]
	__r__5 = ^- (int) :(int)y{
		return [[f hx_objectAtIndex:0]:1 y:y];
	}
	return __r__5{
		
		SEL* __r__5}
	}(self))):2] v2:13 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"281",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	[self eq:[add4:1 y:2] v2:13 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"282",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	[self eq:[MyDynamicClass staticDynamic:1 y:2] v2:13 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"285",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
	MyDynamicClass staticDynamic = ^- (int) :(int)x y:(int)y{
		return x + y + 100;
	}
	[self eq:[MyDynamicClass staticDynamic:1 y:2] v2:103 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"287",@"lineNumber", @"unit.TestMisc",@"className", @"testDynamicClosure",@"methodName", nil]];
}
- (void) testMD5{
	[self eq:[Md5 encode:[NSMutableString stringWithString:@""]] v2:[NSMutableString stringWithString:@"d41d8cd98f00b204e9800998ecf8427e"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"291",@"lineNumber", @"unit.TestMisc",@"className", @"testMD5",@"methodName", nil]];
	[self eq:[Md5 encode:[NSMutableString stringWithString:@"hello"]] v2:[NSMutableString stringWithString:@"5d41402abc4b2a76b9719d911017c592"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"292",@"lineNumber", @"unit.TestMisc",@"className", @"testMD5",@"methodName", nil]];
	[self allow:[Md5 encode:[NSMutableString stringWithString:@"héllo"]] values:[[NSMutableArray alloc] initWithObjects:[NSMutableString stringWithString:@"1a722f7e6c801d9e470a10cb91ba406d"], [NSMutableString stringWithString:@"be50e8478cf24ff3595bc7307fb91b50"], nil] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"294",@"lineNumber", @"unit.TestMisc",@"className", @"testMD5",@"methodName", nil]];
	[self eq:[[Bytes ofString:[NSMutableString stringWithString:@"héllo"]] toHex] v2:[NSMutableString stringWithString:@"68c3a96c6c6f"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"296",@"lineNumber", @"unit.TestMisc",@"className", @"testMD5",@"methodName", nil]];
	[self eq:[[Md5 make:[Bytes ofString:[NSMutableString stringWithString:@"héllo"]]] toHex] v2:[NSMutableString stringWithString:@"be50e8478cf24ff3595bc7307fb91b50"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"297",@"lineNumber", @"unit.TestMisc",@"className", @"testMD5",@"methodName", nil]];
}
- (void) testSHA1{
	[self eq:[Sha1 encode:[NSMutableString stringWithString:@""]] v2:[NSMutableString stringWithString:@"da39a3ee5e6b4b0d3255bfef95601890afd80709"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"301",@"lineNumber", @"unit.TestMisc",@"className", @"testSHA1",@"methodName", nil]];
	[self eq:[Sha1 encode:[NSMutableString stringWithString:@"hello"]] v2:[NSMutableString stringWithString:@"aaf4c61ddcc5e8a2dabede0f3b482cd9aea9434d"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"302",@"lineNumber", @"unit.TestMisc",@"className", @"testSHA1",@"methodName", nil]];
	[self allow:[Sha1 encode:[NSMutableString stringWithString:@"héllo"]] values:[[NSMutableArray alloc] initWithObjects:[NSMutableString stringWithString:@"028db752c14604d624e8b1c121d600c427b8a3ba"], [NSMutableString stringWithString:@"35b5ea45c5e41f78b46a937cc74d41dfea920890"], nil] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"304",@"lineNumber", @"unit.TestMisc",@"className", @"testSHA1",@"methodName", nil]];
	[self eq:[[Sha1 make:[Bytes ofString:[NSMutableString stringWithString:@"héllo"]]] toHex] v2:[NSMutableString stringWithString:@"35b5ea45c5e41f78b46a937cc74d41dfea920890"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"306",@"lineNumber", @"unit.TestMisc",@"className", @"testSHA1",@"methodName", nil]];
}
- (void) testBaseCode{
	
	BaseCode *b = [[BaseCode alloc] init:[Bytes ofString:[NSMutableString stringWithString:@"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-"]]];
	[self eq:[b encodeString:[NSMutableString stringWithString:@"Héllow"]] v2:[NSMutableString stringWithString:@"iceFr6NLtM"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"311",@"lineNumber", @"unit.TestMisc",@"className", @"testBaseCode",@"methodName", nil]];
	[self eq:[b decodeString:[NSMutableString stringWithString:@"iceFr6NLtM"]] v2:[NSMutableString stringWithString:@"Héllow"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"312",@"lineNumber", @"unit.TestMisc",@"className", @"testBaseCode",@"methodName", nil]];
}
- (void) testUrlEncode{
	[self eq:[StringTools urlEncode:[NSMutableString stringWithString:@"é"]] v2:[NSMutableString stringWithString:@"%C3%A9"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"316",@"lineNumber", @"unit.TestMisc",@"className", @"testUrlEncode",@"methodName", nil]];
	[self eq:[StringTools urlDecode:[NSMutableString stringWithString:@"%C3%A9"]] v2:[NSMutableString stringWithString:@"é"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"317",@"lineNumber", @"unit.TestMisc",@"className", @"testUrlEncode",@"methodName", nil]];
}
- (id) opt1:(int)x y:(NSMutableString*)y{
	// Optional arguments
	if (!x) x = nil;
	if (!y) y = nil;
	
	return [NSMutableDictionary dictionaryWithObjectsAndKeys:
	[x copy], @"x",
	[y copy], @"y",
	nil];
}
- (id) opt2:(int)x y:(NSMutableString*)y{
	// Optional arguments
	if (!x) x = 5;
	if (!y) y = [NSMutableString stringWithString:@"hello"];
	
	return [NSMutableDictionary dictionaryWithObjectsAndKeys:
	[x copy], @"x",
	[y copy], @"y",
	nil];
}
- (id) opt3:(int)x y:(float)y{
	// Optional arguments
	if (!x) x = 5;
	if (!y) y = 6;
	
	return [NSMutableDictionary dictionaryWithObjectsAndKeys:
	[x copy], @"x",
	[y copy], @"y",
	nil];
}
- (int) opt4:(int)x{
	// Optional arguments
	if (!x) x = 10;
	
	return x + 1;
}
- (void) testOptionalParams{
	[self eq:[self opt1:nil y:nil] x v2:nil pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"337",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt1:nil y:nil] y v2:nil pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"338",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt1:55 y:nil] x v2:55 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"339",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt1:55 y:nil] y v2:nil pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"340",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt1:nil y:[NSMutableString stringWithString:@"str"]] x v2:nil pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"341",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt1:nil y:[NSMutableString stringWithString:@"str"]] y v2:[NSMutableString stringWithString:@"str"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"342",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt1:66 y:[NSMutableString stringWithString:@"hello"]] x v2:66 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"343",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt1:66 y:[NSMutableString stringWithString:@"hello"]] y v2:[NSMutableString stringWithString:@"hello"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"344",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt2:nil y:nil] x v2:5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"346",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt2:nil y:nil] y v2:[NSMutableString stringWithString:@"hello"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"347",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt2:nil y:nil] x v2:5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"350",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt2:0 y:nil] y v2:[NSMutableString stringWithString:@"hello"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"352",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:nil y:nil] x v2:5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"354",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:nil y:nil] y v2:6 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"355",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:9 y:nil] x v2:9 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"356",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:9 y:nil] y v2:6 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"357",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:9 y:10] x v2:9 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"358",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:9 y:10] y v2:10 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"359",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:nil y:nil] x v2:5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"360",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:nil y:nil] y v2:6 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"361",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:nil y:nil] x v2:5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"362",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:nil y:nil] y v2:6 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"363",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:nil y:7] x v2:5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"364",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:nil y:7] y v2:7 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"365",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:nil y:7.4] x v2:5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"368",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt3:nil y:7.4] y v2:7.4 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"369",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt4:nil] v2:11 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"371",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[self opt4:nil] v2:11 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"373",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	SEL opt4b = opt4:;
	[self eq:[opt4b:nil] v2:11 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"377",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[opt4b:3] v2:4 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"378",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:[opt4b:nil] v2:11 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"380",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	SEL opt5 = ^- (int) :(int)a b:(int)b{
		// Optional arguments
		if (!b) b = 2;
		
		return a + b;
	}
	[self eq:3 v2:[opt5:1 b:nil] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"388",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:3 v2:[opt5:1 b:2] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"389",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
	[self eq:3 v2:[opt5:1 b:nil] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"390",@"lineNumber", @"unit.TestMisc",@"className", @"testOptionalParams",@"methodName", nil]];
}
- (void) testIncr{
	int z = 0;
	[self eq:z++ v2:0 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"395",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:z v2:1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"396",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:++z v2:2 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"397",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:z v2:2 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"398",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	z++;
	[self eq:z v2:3 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"400",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	++z;
	[self eq:z v2:4 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"402",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:z += 3 v2:7 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"404",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	int x = 0;
	
	NSMutableArray *arr = [[NSMutableArray alloc] initWithObject:[NSNumber numberWithInt:3]];
	[self eq:[arr hx_objectAtIndex:x++]++ v2:3 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"408",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:x v2:1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"409",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:[arr hx_objectAtIndex:0] v2:4 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"410",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	x = 0;
	[self eq:[arr hx_objectAtIndex:x++] += 3 v2:7 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"412",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:[arr hx_objectAtIndex:0] v2:7 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"413",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	int x1 = 0;
	
	NSMutableArray *arr1 = [[NSMutableArray alloc] initWithObject:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSNumber numberWithInt:3] copy], @"v",
	nil]];
	[self eq:[arr1 hx_objectAtIndex:x1++] v++ v2:3 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"417",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:x1 v2:1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"418",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:[arr1 hx_objectAtIndex:0] v v2:4 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"419",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	x1 = 0;
	[self eq:[arr1 hx_objectAtIndex:x1++] v += 3 v2:7 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"423",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:[arr1 hx_objectAtIndex:0] v v2:7 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"424",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	x1 = 0;
	id arr2 = [[NSMutableArray alloc] initWithObject:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSNumber numberWithInt:3] copy], @"v",
	nil]];
	[self eq:[arr2 hx_objectAtIndex:x1++] v++ v2:3 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"429",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:x1 v2:1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"430",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:[arr2 hx_objectAtIndex:0] v v2:4 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"431",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	x1 = 0;
	[self eq:[arr2 hx_objectAtIndex:x1++] v += 3 v2:7 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"435",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
	[self eq:[arr2 hx_objectAtIndex:0] v v2:7 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"436",@"lineNumber", @"unit.TestMisc",@"className", @"testIncr",@"methodName", nil]];
}
- (void) testInitOrder{
	int i = 0;
	id o = [NSMutableDictionary dictionaryWithObjectsAndKeys:
	[i++ copy], @"y",
	[i++ copy], @"x",
	[i++ copy], @"z",
	[i++ copy], @"blabla",
	nil];
	[self eq:o y v2:0 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"448",@"lineNumber", @"unit.TestMisc",@"className", @"testInitOrder",@"methodName", nil]];
	[self eq:o x v2:1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"449",@"lineNumber", @"unit.TestMisc",@"className", @"testInitOrder",@"methodName", nil]];
	[self eq:o z v2:2 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"450",@"lineNumber", @"unit.TestMisc",@"className", @"testInitOrder",@"methodName", nil]];
	[self eq:o blabla v2:3 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"451",@"lineNumber", @"unit.TestMisc",@"className", @"testInitOrder",@"methodName", nil]];
}
- (void) testInline{
	int x = 3;
	[self eq:2 *  (x + 5) v2:16 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"459",@"lineNumber", @"unit.TestMisc",@"className", @"testInline",@"methodName", nil]];
	[self eq:- (x + 5) v2:-8 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"460",@"lineNumber", @"unit.TestMisc",@"className", @"testInline",@"methodName", nil]];
}
- (void) testEvalAccessOrder{
	
	NSMutableArray *a = [[NSMutableArray alloc] initWithObjects:[NSNumber numberWithInt:0], [NSNumber numberWithInt:0], nil];
	int x = 0;
	[a hx_objectAtIndex:x++]++;
	[self eq:[a hx_objectAtIndex:0] v2:1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"467",@"lineNumber", @"unit.TestMisc",@"className", @"testEvalAccessOrder",@"methodName", nil]];
	[self eq:[a hx_objectAtIndex:1] v2:0 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"468",@"lineNumber", @"unit.TestMisc",@"className", @"testEvalAccessOrder",@"methodName", nil]];
	int x1 = 0;
	
	NSMutableArray *a1 = [[NSMutableArray alloc] init];
	[a1 hx_replaceObjectAtIndex:x1++ withObject:x1++];
	[self eq:[a1 hx_objectAtIndex:0] v2:1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"473",@"lineNumber", @"unit.TestMisc",@"className", @"testEvalAccessOrder",@"methodName", nil]];
	
	NSMutableArray *x2 = [[NSMutableArray alloc] initWithObject:[NSNumber numberWithInt:0]];
	SEL foo = ^- (int) {
		return [x2 hx_objectAtIndex:0]++;
	}
	[a1 hx_replaceObjectAtIndex:[foo] withObject:[foo]];
	[self eq:[a1 hx_objectAtIndex:0] v2:1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"478",@"lineNumber", @"unit.TestMisc",@"className", @"testEvalAccessOrder",@"methodName", nil]];
}
- (void) testStaticVarFun{
	[self eq:[-TMono-:2 y:3] v2:5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"484",@"lineNumber", @"unit.TestMisc",@"className", @"testStaticVarFun",@"methodName", nil]];
}
- (void) testDefArgs{
	
	ExtDefArgs *e = [[ExtDefArgs alloc] init];
	[self eq:[e get:nil] v2:7 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"489",@"lineNumber", @"unit.TestMisc",@"className", @"testDefArgs",@"methodName", nil]];
	
	BaseDefArgs *b = e;
	[self eq:[b get:nil] v2:7 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"491",@"lineNumber", @"unit.TestMisc",@"className", @"testDefArgs",@"methodName", nil]];
	
	IDefArgs *i = e;
	[self eq:[i get:nil] v2:7 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"493",@"lineNumber", @"unit.TestMisc",@"className", @"testDefArgs",@"methodName", nil]];
}
- (void) testStringBuf{
	
	StringBuf *b = [[StringBuf alloc] init];
	[b.b appendString:[NSMutableString stringWithString:@"-45"]];
	b.b += [Std string:1.456];
	b.b += [Std string:nil];
	[b.b appendString:[NSMutableString stringWithString:@"true"]];
	[b.b appendString:[NSMutableString stringWithString:@"false"]];
	[b.b appendString:[NSMutableString stringWithString:@"Hello!"]];
	[b.b appendString:[[NSMutableString stringWithString:@"Bla"] substr:@"1" len:@"2"]];
	[b.b appendString:[NSMutableString stringWithString:@"R"]];
	[self eq:b.b v2:[NSMutableString stringWithString:@"-451.456nulltruefalseHello!laR"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"506",@"lineNumber", @"unit.TestMisc",@"className", @"testStringBuf",@"methodName", nil]];
}
- (void) testToString{
	id x = [NSMutableDictionary dictionaryWithObjectsAndKeys:
	[^NSMutableString*(){
		return [NSMutableString stringWithString:@"foo"];
	} copy], @"toString",
	nil];
	[self eq:[Std string:x] v2:[NSMutableString stringWithString:@"foo"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"512",@"lineNumber", @"unit.TestMisc",@"className", @"testToString",@"methodName", nil]];
}
- (void) testFormat{
	int x = 5;
	int y = 6;
	[self eq:[[[NSMutableString stringWithString:@""] stringByAppendingString:x] stringByAppendingString: (x + y)] v2:[NSMutableString stringWithString:@"511"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"528",@"lineNumber", @"unit.TestMisc",@"className", @"testFormat",@"methodName", nil]];
}
- (void) testJSon{
	
	NSMutableArray *_g = [[NSMutableArray alloc] initWithObject:self];
	
	NSMutableString *str = [Json stringify:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[-4500 copy], @"x",
	[1.456 copy], @"y",
	[[[NSMutableArray alloc] initWithObjects:[NSMutableString stringWithString:@"hello"], [NSMutableString stringWithString:@"wor'\"\n\t\rd"], nil] copy], @"a",
	nil] replacer:nil];
	str = [str substr:1 len:str.length - 2];
	
	NSMutableArray *parts = [str split:[NSMutableString stringWithString:@","]];
	[self t:[parts remove:[NSMutableString stringWithString:@"\"x\":-4500"]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"536",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[self t:[parts remove:[NSMutableString stringWithString:@"\"y\":1.456"]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"537",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[self t:[parts remove:[NSMutableString stringWithString:@"\"a\":[\"hello\""]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"538",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[self t:[parts remove:[NSMutableString stringWithString:@"\"wor'\\\"\\n\\t\\rd\"]"]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"539",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[self eq:[parts join:[NSMutableString stringWithString:@"#"]] v2:[NSMutableString stringWithString:@""] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"540",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	SEL _id = ^- (void) :(id)v pos:(id)pos{
		// Optional arguments
		if (!pos) pos = nil;
		
		[[_g hx_objectAtIndex:0] eq:[Json parse:[Json stringify:v replacer:nil]] v2:v pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"547",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	}
	SEL deepId = ^- (void) :(id)v{
		
		NSMutableString *str1 = [Json stringify:v replacer:nil];
		[[_g hx_objectAtIndex:0] eq:[Json stringify:[Json parse:str1] replacer:nil] v2:str1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"550",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	}
	[_id:YES pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"553",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[_id:NO pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"554",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[_id:nil pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"555",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[_id:0 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"556",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[_id:145 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"557",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[_id:-145 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"558",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[_id:0.15461 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"559",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[_id:-485.15461 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"560",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[_id:1e10 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"561",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[_id:-1e-10 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"562",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[_id:[NSMutableString stringWithString:@""] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"563",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[_id:[NSMutableString stringWithString:@"hello"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"564",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[_id:[NSMutableString stringWithString:@"he\n\r\t\\\\llo"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"565",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[deepId:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[4 copy], @"field",
	nil]];
	[deepId:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[nil copy], @"nested",
	nil] copy], @"test",
	nil]];
	
	NSMutableArray *mix = [[NSMutableArray alloc] initWithObjects:[NSNumber numberWithInt:1], [NSNumber numberWithInt:2], [NSNumber numberWithInt:3], [NSMutableString stringWithString:@"str"], nil];
	[deepId:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[mix copy], @"array",
	nil]];
	[self eq:[Json parse:[NSMutableString stringWithString:@"\"\\u00E9\""]] v2:[NSMutableString stringWithString:@"é"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"572",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[self eq:[Json stringify:-fa3-POSITIVE_INFINITY replacer:nil] v2:[NSMutableString stringWithString:@"null"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"574",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[self eq:[Json stringify:-fa3-NEGATIVE_INFINITY replacer:nil] v2:[NSMutableString stringWithString:@"null"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"575",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
	[self eq:[Json stringify:-fa3-NaN replacer:nil] v2:[NSMutableString stringWithString:@"null"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"576",@"lineNumber", @"unit.TestMisc",@"className", @"testJSon",@"methodName", nil]];
}
- (void) testConstructorsOpts{
	
	BaseConstrOpt *b = [[BaseConstrOpt alloc] init:nil i:nil b:nil];
	[self eq:b.s v2:[NSMutableString stringWithString:@"test"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"581",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	[self eq:b.i v2:-5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"582",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	[self eq:b.b v2:YES pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"583",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	
	BaseConstrOpt *b1 = [[BaseConstrOpt alloc] init:nil i:99 b:nil];
	[self eq:b1.s v2:[NSMutableString stringWithString:@"test"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"586",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	[self eq:b1.i v2:99 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"587",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	[self eq:b1.b v2:YES pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"588",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	
	SubConstrOpt *b2 = [[SubConstrOpt alloc] init];
	[self eq:b2.s v2:[NSMutableString stringWithString:@"test"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"591",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	[self eq:b2.i v2:-5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"592",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	[self eq:b2.b v2:YES pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"593",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	
	SubConstrOpt2 *b3 = [[SubConstrOpt2 alloc] init "-dynamic_param-" ];
	[self eq:b3.s v2:[NSMutableString stringWithString:@"test"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"596",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	[self eq:b3.i v2:-5 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"597",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	[self eq:b3.b v2:YES pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"598",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	
	SubConstrOpt3 *b4 = [[SubConstrOpt3 alloc] init:nil i:nil];
	[self eq:b4.s v2:[NSMutableString stringWithString:@"test2"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"601",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	[self eq:b4.i v2:-6 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"602",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
	[self eq:b4.b v2:YES pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMisc.hx",@"fileName", @"603",@"lineNumber", @"unit.TestMisc",@"className", @"testConstructorsOpts",@"methodName", nil]];
}
- (id) init{
	self = [super init];
	return self;
}

@end
