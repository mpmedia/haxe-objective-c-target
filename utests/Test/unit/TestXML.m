//
//  TestXML
//  Test
//
//  Source generated by Haxe Objective-C target
//

#import "../unit/TestXML.h"

@implementation TestXML

- (void) checkExc:(Xml*)x pos:(id)pos{
	// Optional arguments
	if (!pos) pos = nil;
	
	
	NSMutableArray *x1 = [[NSMutableArray alloc] initWithObject:x];
	[self exc:^- (void) {
		[[x1 hx_objectAtIndex:0] get_nodeName];
	} pos:pos];
	[self exc:^- (void) {
		[[x1 hx_objectAtIndex:0] get_nodeValue];
	} pos:pos];
	[self exc:^- (void) {
		[[x1 hx_objectAtIndex:0] attributes];
	} pos:pos];
	[self exc:^- (void) {
		[[x1 hx_objectAtIndex:0] get:[NSMutableString stringWithString:@"att"]];
	} pos:pos];
	[self exc:^- (void) {
		[[x1 hx_objectAtIndex:0] exists:[NSMutableString stringWithString:@"att"]];
	} pos:pos];
}
- (void) testBasic{
	
	Xml *x = [Xml parse:[NSMutableString stringWithString:@"<a href=\"hello\">World<b/></a>"]];
	[self t:binop[Xml compare-TDynamic-] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"16",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self eq:x.nodeType v2:-TEnum- pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"18",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self checkExc:x pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"19",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	x = [x firstChild];
	[self eq:x.nodeType v2:-TEnum- pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"22",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[x get_nodeName] v2:[NSMutableString stringWithString:@"a"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"26",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[x set_nodeName:[NSMutableString stringWithString:@"b"]];
	[self eq:[x get_nodeName] v2:[NSMutableString stringWithString:@"b"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"28",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[x toString] v2:[NSMutableString stringWithString:@"<b href=\"hello\">World<b/></b>"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"29",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[x get:[NSMutableString stringWithString:@"href"]] v2:[NSMutableString stringWithString:@"hello"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"32",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[x get:[NSMutableString stringWithString:@"other"]] v2:nil pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"33",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[x exists:[NSMutableString stringWithString:@"href"]] v2:YES pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"34",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[x exists:[NSMutableString stringWithString:@"other"]] v2:NO pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"35",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[[Lambda array:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[attributes copy], @"iterator",
	nil]] join:[NSMutableString stringWithString:@"#"]] v2:[NSMutableString stringWithString:@"href"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"36",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[x remove:[NSMutableString stringWithString:@"href"]];
	[self eq:[[Lambda array:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[attributes copy], @"iterator",
	nil]] join:[NSMutableString stringWithString:@"#"]] v2:[NSMutableString stringWithString:@""] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"38",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[x toString] v2:[NSMutableString stringWithString:@"<b>World<b/></b>"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"39",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[[x firstChild] get_nodeValue] v2:[NSMutableString stringWithString:@"World"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"42",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[[x firstElement] get_nodeName] v2:[NSMutableString stringWithString:@"b"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"43",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
	[self exc:^- (void) {
		[Xml parse:[NSMutableString stringWithString:@"<node>"]];
	} pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"46",@"lineNumber", @"unit.TestXML",@"className", @"testBasic",@"methodName", nil]];
}
- (void) testFormat{
	[self eq:[[Xml parse:[NSMutableString stringWithString:@"<a><b><c/> <d/> \n <e/><![CDATA[<x>]]></b></a>"]] toString] v2:[NSMutableString stringWithString:@"<a><b><c/> <d/> \n <e/><![CDATA[<x>]]></b></a>"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"54",@"lineNumber", @"unit.TestXML",@"className", @"testFormat",@"methodName", nil]];
	[self eq:[[Xml parse:[NSMutableString stringWithString:@"\""]] toString] v2:[NSMutableString stringWithString:@"\""] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"59",@"lineNumber", @"unit.TestXML",@"className", @"testFormat",@"methodName", nil]];
}
- (void) testComplex{
	
	NSMutableString *header = [NSMutableString stringWithString:@"<?some header?>"];
	
	NSMutableString *doctype = [NSMutableString stringWithString:@"<!DOCTYPE root SYSTEM \"\">"];
	
	NSMutableString *comment = [NSMutableString stringWithString:@"<!--Comment-->"];
	
	NSMutableString *xml = [NSMutableString stringWithString:@"<html><body><![CDATA[<a href=\"CDATA\"/>&lt;]]></body></html>"];
	
	Xml *x = [Xml parse:[[[header stringByAppendingString:doctype] stringByAppendingString:comment] stringByAppendingString:xml]];
	[self eq:[x toString] v2:[[[header stringByAppendingString:doctype] stringByAppendingString:comment] stringByAppendingString:xml] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"87",@"lineNumber", @"unit.TestXML",@"className", @"testComplex",@"methodName", nil]];
}
- (void) testWhitespaces{
	
	Xml *x = [Xml parse:[NSMutableString stringWithString:@"<a> </a><b></b> \n <c/>"]];
	
	NSMutableArray *childs = [Lambda array:x];
	[self eq:childs.length v2:4 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"96",@"lineNumber", @"unit.TestXML",@"className", @"testWhitespaces",@"methodName", nil]];
	
	Xml *d = [childs hx_objectAtIndex:2];
	[self eq:d.nodeType v2:-TEnum- pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"99",@"lineNumber", @"unit.TestXML",@"className", @"testWhitespaces",@"methodName", nil]];
	[self eq:[d get_nodeValue] v2:[NSMutableString stringWithString:@" \n "] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"100",@"lineNumber", @"unit.TestXML",@"className", @"testWhitespaces",@"methodName", nil]];
	id el = [x elements];
	
	Xml *a = [el next];
	[self eq:[[a firstChild] get_nodeValue] v2:[NSMutableString stringWithString:@" "] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"104",@"lineNumber", @"unit.TestXML",@"className", @"testWhitespaces",@"methodName", nil]];
	
	Xml *b = [el next];
	[self eq:[[b firstChild] get_nodeValue] v2:[NSMutableString stringWithString:@""] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"110",@"lineNumber", @"unit.TestXML",@"className", @"testWhitespaces",@"methodName", nil]];
	[self eq:[[[x toString] split:[NSMutableString stringWithString:@"\n"]] join:[NSMutableString stringWithString:@"\\n"]] v2:[NSMutableString stringWithString:@"<a> </a><b></b> \\n <c/>"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"111",@"lineNumber", @"unit.TestXML",@"className", @"testWhitespaces",@"methodName", nil]];
	
	Xml *c = [el next];
	[self eq:[c firstChild] v2:nil pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"114",@"lineNumber", @"unit.TestXML",@"className", @"testWhitespaces",@"methodName", nil]];
}
- (void) testCreate{
	[self eq:[[Xml createDocument] toString] v2:[NSMutableString stringWithString:@""] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"118",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	[self eq:[[Xml createPCData:[NSMutableString stringWithString:@"Hello"]] toString] v2:[NSMutableString stringWithString:@"Hello"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"119",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	[self eq:[[Xml createCData:[NSMutableString stringWithString:@"<x>"]] toString] v2:[NSMutableString stringWithString:@"<![CDATA[<x>]]>"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"125",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	[self eq:[[Xml createComment:[NSMutableString stringWithString:@"Hello"]] toString] v2:[NSMutableString stringWithString:@"<!--Hello-->"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"126",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	[self eq:[[Xml createProcessingInstruction:[NSMutableString stringWithString:@"XHTML"]] toString] v2:[NSMutableString stringWithString:@"<?XHTML?>"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"133",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	[self eq:[[Xml createDocType:[NSMutableString stringWithString:@"XHTML"]] toString] v2:[NSMutableString stringWithString:@"<!DOCTYPE XHTML>"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"134",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	[self eq:[[[Xml parse:[NSMutableString stringWithString:@"<!--Hello-->"]] firstChild] get_nodeValue] v2:[NSMutableString stringWithString:@"Hello"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"137",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	
	Xml *c = [Xml createComment:[NSMutableString stringWithString:@"Hello"]];
	[self eq:[c get_nodeValue] v2:[NSMutableString stringWithString:@"Hello"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"139",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	[c set_nodeValue:[NSMutableString stringWithString:@"Blabla"]];
	[self eq:[c get_nodeValue] v2:[NSMutableString stringWithString:@"Blabla"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"141",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	[self eq:[c toString] v2:[NSMutableString stringWithString:@"<!--Blabla-->"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"142",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	[self eq:[[[Xml parse:[NSMutableString stringWithString:@"<![CDATA[Hello]]>"]] firstChild] get_nodeValue] v2:[NSMutableString stringWithString:@"Hello"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"143",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	
	Xml *c1 = [Xml createCData:[NSMutableString stringWithString:@"Hello"]];
	[self eq:[c1 get_nodeValue] v2:[NSMutableString stringWithString:@"Hello"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"145",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	[c1 set_nodeValue:[NSMutableString stringWithString:@"Blabla"]];
	[self eq:[c1 get_nodeValue] v2:[NSMutableString stringWithString:@"Blabla"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"147",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	[self eq:[c1 toString] v2:[NSMutableString stringWithString:@"<![CDATA[Blabla]]>"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"148",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
	[self eq:[[Xml createPCData:[NSMutableString stringWithString:@"Hello"]] get_nodeValue] v2:[NSMutableString stringWithString:@"Hello"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"149",@"lineNumber", @"unit.TestXML",@"className", @"testCreate",@"methodName", nil]];
}
- (void) testNS{
	
	Xml *x = [[Xml parse:[NSMutableString stringWithString:@"<xhtml:br xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xhtml:alt=\"test\"><hello/></xhtml:br>"]] firstChild];
	[self eq:x.nodeType v2:-TEnum- pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"154",@"lineNumber", @"unit.TestXML",@"className", @"testNS",@"methodName", nil]];
	[self eq:[x get_nodeName] v2:[NSMutableString stringWithString:@"xhtml:br"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"155",@"lineNumber", @"unit.TestXML",@"className", @"testNS",@"methodName", nil]];
	[self t:[x exists:[NSMutableString stringWithString:@"xhtml:alt"]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"156",@"lineNumber", @"unit.TestXML",@"className", @"testNS",@"methodName", nil]];
	[self eq:[x get:[NSMutableString stringWithString:@"xhtml:alt"]] v2:[NSMutableString stringWithString:@"test"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"157",@"lineNumber", @"unit.TestXML",@"className", @"testNS",@"methodName", nil]];
	[self eq:[x get:[NSMutableString stringWithString:@"xhtml:other"]] v2:nil pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"158",@"lineNumber", @"unit.TestXML",@"className", @"testNS",@"methodName", nil]];
	[x set:[NSMutableString stringWithString:@"xhtml:alt"] value:[NSMutableString stringWithString:@"bye"]];
	[self eq:[x get:[NSMutableString stringWithString:@"xhtml:alt"]] v2:[NSMutableString stringWithString:@"bye"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"160",@"lineNumber", @"unit.TestXML",@"className", @"testNS",@"methodName", nil]];
	
	Xml *h = [x firstElement];
	[self eq:[h get_nodeName] v2:[NSMutableString stringWithString:@"hello"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"163",@"lineNumber", @"unit.TestXML",@"className", @"testNS",@"methodName", nil]];
	[h set_nodeName:[NSMutableString stringWithString:@"em"]];
	[self eq:[h get_nodeName] v2:[NSMutableString stringWithString:@"em"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"165",@"lineNumber", @"unit.TestXML",@"className", @"testNS",@"methodName", nil]];
	[self eq:[Lambda count:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[((SEL)($this:(snd ctx.path)) 
	NSMutableArray *f = [[NSMutableArray alloc] initWithObject:elementsNamed:]
	__r__ = ^id(){
		return [[f hx_objectAtIndex:0]:[NSMutableString stringWithString:@"em"]];
	}
	return __r__{
		
		SEL* __r__}
	}(self)) copy], @"iterator",
	nil] pred:nil] v2:1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"167",@"lineNumber", @"unit.TestXML",@"className", @"testNS",@"methodName", nil]];
	[h set_nodeName:[NSMutableString stringWithString:@"xhtml:em"]];
	[self eq:[Lambda count:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[((SEL)($this:(snd ctx.path)) 
	NSMutableArray *f = [[NSMutableArray alloc] initWithObject:elementsNamed:]
	__r__2 = ^id(){
		return [[f hx_objectAtIndex:0]:[NSMutableString stringWithString:@"xhtml:em"]];
	}
	return __r__2{
		
		SEL* __r__2}
	}(self)) copy], @"iterator",
	nil] pred:nil] v2:1 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"171",@"lineNumber", @"unit.TestXML",@"className", @"testNS",@"methodName", nil]];
	[self eq:[Lambda count:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[((SEL)($this:(snd ctx.path)) 
	NSMutableArray *f = [[NSMutableArray alloc] initWithObject:elementsNamed:]
	__r__3 = ^id(){
		return [[f hx_objectAtIndex:0]:[NSMutableString stringWithString:@"em"]];
	}
	return __r__3{
		
		SEL* __r__3}
	}(self)) copy], @"iterator",
	nil] pred:nil] v2:0 pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"172",@"lineNumber", @"unit.TestXML",@"className", @"testNS",@"methodName", nil]];
	[self eq:[h get_nodeName] v2:[NSMutableString stringWithString:@"xhtml:em"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"174",@"lineNumber", @"unit.TestXML",@"className", @"testNS",@"methodName", nil]];
}
- (void) testNodetype{
	
	NSMutableArray *element = [[NSMutableArray alloc] initWithObject:[Xml createElement:[NSMutableString stringWithString:@"x"]]];
	
	NSMutableArray *l = [[NSMutableArray alloc] initWithObjects:[Xml createPCData:[NSMutableString stringWithString:@"x"]], [Xml createCData:[NSMutableString stringWithString:@"x"]], [Xml createDocType:[NSMutableString stringWithString:@"x"]], [Xml createProcessingInstruction:[NSMutableString stringWithString:@"x"]], [Xml createComment:[NSMutableString stringWithString:@"x"]], nil];
	{
		int _g = 0;
		while (_g < l.length) {
			
			NSMutableArray *xml = [[NSMutableArray alloc] initWithObject:[l hx_objectAtIndex:_g]];
			++_g;
			[self exc:^- (void) {
				[[xml hx_objectAtIndex:0] firstChild];
			} pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"183",@"lineNumber", @"unit.TestXML",@"className", @"testNodetype",@"methodName", nil]];
			[self exc:^- (void) {
				[[xml hx_objectAtIndex:0] firstElement];
			} pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"184",@"lineNumber", @"unit.TestXML",@"className", @"testNodetype",@"methodName", nil]];
			[self exc:^- (void) {
				[[xml hx_objectAtIndex:0] elements];
			} pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"185",@"lineNumber", @"unit.TestXML",@"className", @"testNodetype",@"methodName", nil]];
			[self exc:^- (void) {
				[[xml hx_objectAtIndex:0] elementsNamed:[NSMutableString stringWithString:@"x"]];
			} pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"186",@"lineNumber", @"unit.TestXML",@"className", @"testNodetype",@"methodName", nil]];
			[self exc:^- (void) {
				[[xml hx_objectAtIndex:0] addChild:[element hx_objectAtIndex:0]];
			} pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"187",@"lineNumber", @"unit.TestXML",@"className", @"testNodetype",@"methodName", nil]];
			[self exc:^- (void) {
				[[xml hx_objectAtIndex:0] removeChild:[element hx_objectAtIndex:0]];
			} pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"188",@"lineNumber", @"unit.TestXML",@"className", @"testNodetype",@"methodName", nil]];
			[self exc:^- (void) {
				[[xml hx_objectAtIndex:0] insertChild:[element hx_objectAtIndex:0] pos:0];
			} pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"189",@"lineNumber", @"unit.TestXML",@"className", @"testNodetype",@"methodName", nil]];
			[self exc:^- (void) {
				{
					id _it = [[xml hx_objectAtIndex:0] iterator];
					while ( [_it hasNext] ) do {
						Xml x = [_it next];
						nil;
					}
				}
			} pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"190",@"lineNumber", @"unit.TestXML",@"className", @"testNodetype",@"methodName", nil]];
		}
	}
}
- (void) testEntities{
	
	NSMutableArray *entities = [[NSMutableArray alloc] initWithObjects:[NSMutableString stringWithString:@"&lt;"], [NSMutableString stringWithString:@"&gt;"], [NSMutableString stringWithString:@"&quot;"], [NSMutableString stringWithString:@"&amp;"], [NSMutableString stringWithString:@"&apos;"], [NSMutableString stringWithString:@"&nbsp;"], [NSMutableString stringWithString:@"&euro;"], [NSMutableString stringWithString:@"&#64;"], [NSMutableString stringWithString:@"&#244;"], [NSMutableString stringWithString:@"&#x3F;"], [NSMutableString stringWithString:@"&#xFF;"], nil];
	
	NSMutableArray *values = [entities copy];
	{
		int _g1 = 0; int _g = entities.length;
		while (_g1 < _g) {
			int i = _g1++;
			[self infos:[entities hx_objectAtIndex:i]];
			[self eq:[[[Xml parse:[entities hx_objectAtIndex:i]] firstChild] get_nodeValue] v2:[values hx_objectAtIndex:i] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"217",@"lineNumber", @"unit.TestXML",@"className", @"testEntities",@"methodName", nil]];
		}
	}
}
- (void) testCustomXmlParser{
	
	NSMutableArray *entities = [[NSMutableArray alloc] initWithObjects:[NSMutableString stringWithString:@"&lt;"], [NSMutableString stringWithString:@"&gt;"], [NSMutableString stringWithString:@"&quot;"], [NSMutableString stringWithString:@"&amp;"], [NSMutableString stringWithString:@"&apos;"], [NSMutableString stringWithString:@"&euro;"], [NSMutableString stringWithString:@"&#64;"], [NSMutableString stringWithString:@"&#244;"], [NSMutableString stringWithString:@"&#x3F;"], [NSMutableString stringWithString:@"&#xFF;"], nil];
	
	NSMutableArray *values = [[NSMutableArray alloc] initWithObjects:[NSMutableString stringWithString:@"<"], [NSMutableString stringWithString:@">"], [NSMutableString stringWithString:@"\""], [NSMutableString stringWithString:@"&"], [NSMutableString stringWithString:@"'"], [NSMutableString stringWithString:@"&euro;"], [NSMutableString stringWithString:@"@"], [NSMutableString:[NSNumber numberWithInt:244]], [NSMutableString stringWithString:@"?"], [NSMutableString:[NSNumber numberWithInt:255]], nil];
	{
		int _g1 = 0; int _g = entities.length;
		while (_g1 < _g) {
			int i = _g1++;
			[self infos:[entities hx_objectAtIndex:i]];
			[self eq:[[[Parser parse:[entities hx_objectAtIndex:i]] firstChild] get_nodeValue] v2:[values hx_objectAtIndex:i] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"227",@"lineNumber", @"unit.TestXML",@"className", @"testCustomXmlParser",@"methodName", nil]];
		}
	}
	
	NSMutableString *s = [NSMutableString stringWithString:@"<a>&gt;<b>&lt;</b>&lt;&gt;<b>&gt;&lt;</b>\"</a>"];
	
	Xml *xml = [Parser parse:s];
	[self eq:s v2:[xml toString] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"232",@"lineNumber", @"unit.TestXML",@"className", @"testCustomXmlParser",@"methodName", nil]];
}
- (void) testMore{
	
	Xml *doc = [Xml parse:[NSMutableString stringWithString:@"<a>A</a><i>I</i>"]];
	
	Xml *aElement = [[doc elementsNamed:[NSMutableString stringWithString:@"a"]] next];
	
	Xml *iElement = [[doc elementsNamed:[NSMutableString stringWithString:@"i"]] next];
	[iElement addChild:aElement];
	[self eq:[doc toString] v2:[NSMutableString stringWithString:@"<i>I<a>A</a></i>"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestXML.hx",@"fileName", @"241",@"lineNumber", @"unit.TestXML",@"className", @"testMore",@"methodName", nil]];
}
- (id) init{
	self = [super init];
	return self;
}

@end
