//
//  TestMatch
//  Test
//
//  Source generated by Haxe Objective-C target
//

#import "../unit/TestMatch.h"

@implementation TestMatch

+ (NSMutableString*) switchNormal:(id)e{
	return ^(NSMutableString*)
	var $e2 : enum =  (e expr)
	switch ( $e2.index ) {
		
		case 0:
		
		var MATCH e_fexpr_eEConst_0 : Expr = $e2.params[0]{
			__r__ = ^(id)
			var $e4 : enum =  (e_fexpr_eEConst_0)
			switch ( $e4.index ) {
				
				case 2:
				
				var MATCH e_fexpr_eEConst_0_eCString_0 : NSMutableString = $e4.params[0]{
					__r__3 = e_fexpr_eEConst_0_eCString_0}break
				default:{
					__r__3 = [NSMutableString stringWithString:@"not_found"]}break
			}
			return __r__3{
				
				id* __r__3}
			}()}break
		case 4:
		
		var MATCH e_fexpr_eEParenthesis_0 : id = $e2.params[0]{
			__r__ = ^(id)
			var $e6 : enum =  (e_fexpr_eEParenthesis_0 expr)
			switch ( $e6.index ) {
				
				case 0:
				
				var MATCH e_fexpr_eEParenthesis_0_fexpr_eEConst_0 : Expr = $e6.params[0]{
					__r__5 = ^(id)
					var $e8 : enum =  (e_fexpr_eEParenthesis_0_fexpr_eEConst_0)
					switch ( $e8.index ) {
						
						case 2:
						
						var MATCH e_fexpr_eEParenthesis_0_fexpr_eEConst_0_eCString_0 : NSMutableString = $e8.params[0]{
							__r__7 = e_fexpr_eEParenthesis_0_fexpr_eEConst_0_eCString_0}break
						default:{
							__r__7 = [NSMutableString stringWithString:@"not_found"]}break
					}
					return __r__7{
						
						id* __r__7}
					}()}break
				default:{
					__r__5 = [NSMutableString stringWithString:@"not_found"]}break
			}
			return __r__5{
				
				id* __r__5}
			}()}break
		case 22:
		
		var MATCH e_fexpr_eEUntyped_0 : id = $e2.params[0]{
			__r__ = ^(id)
			var $e10 : enum =  (e_fexpr_eEUntyped_0 expr)
			switch ( $e10.index ) {
				
				case 0:
				
				var MATCH e_fexpr_eEUntyped_0_fexpr_eEConst_0 : Expr = $e10.params[0]{
					__r__9 = ^(id)
					var $e12 : enum =  (e_fexpr_eEUntyped_0_fexpr_eEConst_0)
					switch ( $e12.index ) {
						
						case 2:
						
						var MATCH e_fexpr_eEUntyped_0_fexpr_eEConst_0_eCString_0 : NSMutableString = $e12.params[0]{
							__r__11 = e_fexpr_eEUntyped_0_fexpr_eEConst_0_eCString_0}break
						default:{
							__r__11 = [NSMutableString stringWithString:@"not_found"]}break
					}
					return __r__11{
						
						id* __r__11}
					}()}break
				default:{
					__r__9 = [NSMutableString stringWithString:@"not_found"]}break
			}
			return __r__9{
				
				id* __r__9}
			}()}break
		case 3:
		
		var MATCH e_fexpr_eEField_1 : NSMutableString = $e2.params[1]{
			__r__ = e_fexpr_eEField_1}break
		case 1:
		
		var MATCH e_fexpr_eEArray_1 : id = $e2.params[1], MATCH e_fexpr_eEArray_0 : id = $e2.params[0]{
			__r__ = ^(id)
			var $e14 : enum =  (e_fexpr_eEArray_1 expr)
			switch ( $e14.index ) {
				
				case 0:
				
				var MATCH e_fexpr_eEArray_1_fexpr_eEConst_0 : Expr = $e14.params[0]{
					__r__13 = ^(id)
					var $e16 : enum =  (e_fexpr_eEArray_1_fexpr_eEConst_0)
					switch ( $e16.index ) {
						
						case 0:
						
						case 1:
						
						var MATCH e_fexpr_eEArray_1_fexpr_eEConst_0_eCInt_0 : NSMutableString = $e16.params[0]{
							__r__15 = [Std string:e_fexpr_eEArray_1_fexpr_eEConst_0_eCInt_0]}break
						default:{
							__r__15 = [NSMutableString stringWithString:@"not_found"]}break
					}
					return __r__15{
						
						id* __r__15}
					}()}break
				default:{
					__r__13 = [NSMutableString stringWithString:@"not_found"]}break
			}
			return __r__13{
				
				id* __r__13}
			}()}break
		case 14:
		
		var MATCH e_fexpr_eEIn_1 : id = $e2.params[1]{
			__r__ = [Std string:e_fexpr_eEIn_1 expr]}break
		default:{
			__r__ = [NSMutableString stringWithString:@"not_found"]}break
	}
	return __r__{
		
		NSMutableString* __r__}
	}();
}
+ (Expr*) switchCapture:(id)e{
	return ^(Expr*)
	var $e2 : enum =  (e expr)
	switch ( $e2.index ) {
		
		case 0:
		
		var MATCH e_fexpr_eEConst_0 : Expr = $e2.params[0]{
			__r__ = ^(id)
			var $e4 : enum =  (e_fexpr_eEConst_0)
			switch ( $e4.index ) {
				
				case 2:
				
				var MATCH e_fexpr_eEConst_0_eCString_0 : NSMutableString = $e4.params[0]{
					__r__3 = ^(id)switch (e_fexpr_eEConst_0_eCString_0){
						case [NSMutableString stringWithString:@"foobar"]:{
							__r__5 = e_fexpr_eEConst_0}break;
						default:{
							__r__5 = nil}break;
					}
					return __r__5{
						
						id* __r__5}
					}()}break
				case 0:
				
				var MATCH e_fexpr_eEConst_0_eCInt_0 : NSMutableString = $e4.params[0]{
					__r__3 = ^(id)switch (e_fexpr_eEConst_0_eCInt_0){
						case [NSMutableString stringWithString:@"9"]:{
							__r__6 = e_fexpr_eEConst_0}break;
						default:{
							__r__6 = nil}break;
					}
					return __r__6{
						
						id* __r__6}
					}()}break
				default:{
					__r__3 = nil}break
			}
			return __r__3{
				
				id* __r__3}
			}()}break
		default:{
			__r__ = nil}break
	}
	return __r__{
		
		Expr* __r__}
	}();
}
+ (NSMutableString*) switchArray:(id)e{
	return ^(NSMutableString*)
	var $e2 : enum =  (e expr)
	switch ( $e2.index ) {
		
		case 6:
		
		var MATCH e_fexpr_eEArrayDecl_0 : NSMutableArray = $e2.params[0]{
			__r__ = ^(id)switch (e_fexpr_eEArrayDecl_0.length){
				case 0:{
					__r__3 = [NSMutableString stringWithString:@"[]"]}break;
				case 1:{
					__r__3 = [[[NSMutableString stringWithString:@"["] stringByAppendingString:[Std string:[e_fexpr_eEArrayDecl_0 hx_objectAtIndex:@"0"] expr]] stringByAppendingString:[NSMutableString stringWithString:@"]"]]}break;
				case 2:{
					__r__3 = [[[[[NSMutableString stringWithString:@"["] stringByAppendingString:[Std string:[e_fexpr_eEArrayDecl_0 hx_objectAtIndex:@"0"] expr]] stringByAppendingString:[NSMutableString stringWithString:@","]] stringByAppendingString:[Std string:[e_fexpr_eEArrayDecl_0 hx_objectAtIndex:@"1"] expr]] stringByAppendingString:[NSMutableString stringWithString:@"]"]]}break;
				default:{
					__r__3 = [NSMutableString stringWithString:@"_"]}break;
			}
			return __r__3{
				
				id* __r__3}
			}()}break
		default:{
			__r__ = [NSMutableString stringWithString:@"_"]}break
	}
	return __r__{
		
		NSMutableString* __r__}
	}();
}
+ (NSMutableString*) switchArray2:(NSMutableArray*)a{
	return ^(NSMutableString*)switch (a.length){
		case 2:{
			__r__ = ^(id)switch ([a hx_objectAtIndex:0]){
				case [NSMutableString stringWithString:@"a"]:{
					__r__2 = ^(id)switch ([a hx_objectAtIndex:1]){
						case [NSMutableString stringWithString:@"b"]:{
							__r__3 = [NSMutableString stringWithString:@"0"]}break;
						default:{
							__r__3 = [[[[NSMutableString stringWithString:@"4:"] stringByAppendingString:[a hx_objectAtIndex:@"0"]] stringByAppendingString:[NSMutableString stringWithString:@","]] stringByAppendingString:[a hx_objectAtIndex:@"1"]]}break;
					}
					return __r__3{
						
						id* __r__3}
					}()}break;
				default:{
					__r__2 = [[[[NSMutableString stringWithString:@"4:"] stringByAppendingString:[a hx_objectAtIndex:@"0"]] stringByAppendingString:[NSMutableString stringWithString:@","]] stringByAppendingString:[a hx_objectAtIndex:@"1"]]}break;
			}
			return __r__2{
				
				id* __r__2}
			}()}break;
		case 1:{
			__r__ = ^(id)switch ([a hx_objectAtIndex:0]){
				case [NSMutableString stringWithString:@"a"]:{
					__r__4 = [NSMutableString stringWithString:@"1"]}break;
				case [NSMutableString stringWithString:@"b"]:{
					__r__4 = [NSMutableString stringWithString:@"2"]}break;
				default:{
					__r__4 = [[NSMutableString stringWithString:@"3:"] stringByAppendingString:[a hx_objectAtIndex:@"0"]]}break;
			}
			return __r__4{
				
				id* __r__4}
			}()}break;
		case 0:{
			__r__ = ( (a.length == 3) ? [[NSMutableString stringWithString:@"5:"] stringByAppendingString:a.length] : [NSMutableString stringWithString:@"6"])}break;
		default:{
			__r__ = ( (a.length == 3) ? [[NSMutableString stringWithString:@"5:"] stringByAppendingString:a.length] : [NSMutableString stringWithString:@"7"])}break;
	}
	return __r__{
		
		NSMutableString* __r__}
	}();
}
+ (NSMutableString*) switchStructure:(id)a{
	return ^(NSMutableString*)switch (a foo){
		case [NSMutableString stringWithString:@"val1"]:{
			__r__ = ^(id)switch (a bar){
				case [NSMutableString stringWithString:@"val2"]:{
					__r__2 = [NSMutableString stringWithString:@"0"]}break;
				default:{
					__r__2 = [NSMutableString stringWithString:@"1"]}break;
			}
			return __r__2{
				
				id* __r__2}
			}()}break;
		default:{
			__r__ = ^(id)switch (a bar){
				case [NSMutableString stringWithString:@"val2"]:{
					__r__3 = [NSMutableString stringWithString:@"2"]}break;
				default:{
					__r__3 = a bar}break;
			}
			return __r__3{
				
				id* __r__3}
			}()}break;
	}
	return __r__{
		
		NSMutableString* __r__}
	}();
}
+ (NSMutableString*) switchCrazy:(id)e{
	return ^(NSMutableString*)
	var $e2 : enum =  (e expr)
	switch ( $e2.index ) {
		
		case 22:
		
		var MATCH e_fexpr_eEUntyped_0 : id = $e2.params[0]{
			__r__ = ^(id)
			var $e4 : enum =  (e_fexpr_eEUntyped_0 expr)
			switch ( $e4.index ) {
				
				case 4:
				
				var MATCH e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0 : id = $e4.params[0]{
					__r__3 = ^(id)
					var $e6 : enum =  (e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0 expr)
					switch ( $e6.index ) {
						
						case 1:
						
						var MATCH e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0_fexpr_eEArray_1 : id = $e6.params[1], MATCH e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0_fexpr_eEArray_0 : id = $e6.params[0]{
							__r__5 = ^(id)
							var $e8 : enum =  (e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0_fexpr_eEArray_0 expr)
							switch ( $e8.index ) {
								
								case 0:
								
								var MATCH e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0_fexpr_eEArray_0_fexpr_eEConst_0 : Expr = $e8.params[0]{
									__r__7 = ^(id)
									var $e10 : enum =  (e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0_fexpr_eEArray_0_fexpr_eEConst_0)
									switch ( $e10.index ) {
										
										case 2:
										
										var MATCH e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0_fexpr_eEArray_0_fexpr_eEConst_0_eCString_0 : NSMutableString = $e10.params[0]{
											__r__9 = ^(id)
											var $e12 : enum =  (e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0_fexpr_eEArray_1 expr)
											switch ( $e12.index ) {
												
												case 0:
												
												var MATCH e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0_fexpr_eEArray_1_fexpr_eEConst_0 : Expr = $e12.params[0]{
													__r__11 = ^(id)
													var $e14 : enum =  (e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0_fexpr_eEArray_1_fexpr_eEConst_0)
													switch ( $e14.index ) {
														
														case 0:
														
														var MATCH e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0_fexpr_eEArray_1_fexpr_eEConst_0_eCInt_0 : NSMutableString = $e14.params[0]{
															__r__13 = [[[Std string:e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0_fexpr_eEArray_0 expr] stringByAppendingString:[NSMutableString stringWithString:@":"]] stringByAppendingString:e_fexpr_eEUntyped_0_fexpr_eEParenthesis_0_fexpr_eEArray_1_fexpr_eEConst_0_eCInt_0]}break
														default:{
															__r__13 = [NSMutableString stringWithString:@"_"]}break
													}
													return __r__13{
														
														id* __r__13}
													}()}break
												default:{
													__r__11 = [NSMutableString stringWithString:@"_"]}break
											}
											return __r__11{
												
												id* __r__11}
											}()}break
										default:{
											__r__9 = [NSMutableString stringWithString:@"_"]}break
									}
									return __r__9{
										
										id* __r__9}
									}()}break
								default:{
									__r__7 = [NSMutableString stringWithString:@"_"]}break
							}
							return __r__7{
								
								id* __r__7}
							}()}break
						default:{
							__r__5 = [NSMutableString stringWithString:@"_"]}break
					}
					return __r__5{
						
						id* __r__5}
					}()}break
				default:{
					__r__3 = [NSMutableString stringWithString:@"_"]}break
			}
			return __r__3{
				
				id* __r__3}
			}()}break
		default:{
			__r__ = [NSMutableString stringWithString:@"_"]}break
	}
	return __r__{
		
		NSMutableString* __r__}
	}();
}
+ (NSMutableString*) switchGuard:(id)e{
	return ^(NSMutableString*)
	var $e2 : enum =  (e expr)
	switch ( $e2.index ) {
		
		case 0:
		
		var MATCH e_fexpr_eEConst_0 : Expr = $e2.params[0]{
			__r__ = ^(id)
			var $e4 : enum =  (e_fexpr_eEConst_0)
			switch ( $e4.index ) {
				
				case 2:
				
				var MATCH e_fexpr_eEConst_0_eCString_0 : NSMutableString = $e4.params[0]{
					__r__3 = ( ([StringTools startsWith:e_fexpr_eEConst_0_eCString_0 start:[NSMutableString stringWithString:@"foo"]]) ? [NSMutableString stringWithString:@"1"] : ( ([StringTools startsWith:e_fexpr_eEConst_0_eCString_0 start:[NSMutableString stringWithString:@"bar"]]) ? [NSMutableString stringWithString:@"2"] : [NSMutableString stringWithString:@"4"]))}break
				case 0:
				
				var MATCH e_fexpr_eEConst_0_eCInt_0 : NSMutableString = $e4.params[0]{
					__r__3 = ( (^(BOOL)int _g = [Std parseInt:e_fexpr_eEConst_0_eCInt_0] * 2
					__r__5 = ^(BOOL)switch (_g){
						case 4:{
							__r__6 = YES}break;
						default:{
							__r__6 = NO}break;
					}
					return __r__6{
						
						BOOL* __r__6}
					}()
					return __r__5{
						
						BOOL* __r__5}
					}()) ? [NSMutableString stringWithString:@"3"] : [NSMutableString stringWithString:@"4"])}break
				default:{
					__r__3 = [NSMutableString stringWithString:@"4"]}break
			}
			return __r__3{
				
				id* __r__3}
			}()}break
		default:{
			__r__ = [NSMutableString stringWithString:@"5"]}break
	}
	return __r__{
		
		NSMutableString* __r__}
	}();
}
+ (NSMutableString*) switchClass:(Class*)cl{
	return ^(NSMutableString*)switch (cl){
		case NSMutableString:{
			__r__ = [NSMutableString stringWithString:@"String"]}break;
		case MyClass:{
			__r__ = [NSMutableString stringWithString:@"unit.MyClass"]}break;
		default:{
			__r__ = [[NSMutableString stringWithString:@"other: "] stringByAppendingString:[Type getClassName:cl]]}break;
	}
	return __r__{
		
		NSMutableString* __r__}
	}();
}
+ (NSMutableString*) toStringX:(TestMatch*)x1{
	return ^(NSMutableString*)
	var $e2 : enum =  (x1)
	switch ( $e2.index ) {
		
		case 0:
		
		var MATCH x1_eU1_0 : int = $e2.params[0]{
			__r__ = ( (x1_eU1_0 > 1) ? [NSMutableString stringWithString:@">1"] : ( (x1_eU1_0 <= 1) ? [NSMutableString stringWithString:@"<=1"] : ^(NSMutableString*)@throw [NSMutableString stringWithString:@"this is impossible to reach actually"];
			return __r__3{
				
				NSMutableString* __r__3}
			}()))}break
		case 1:
		{
			__r__ = [NSMutableString stringWithString:@"U2"]}break
	}
	return __r__{
		
		NSMutableString* __r__}
	}();
}
- (void) testBasic{
	[self eq:[NSMutableString stringWithString:@"bar"] v2:[TestMatch switchNormal:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"bar"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[2832 copy], @"min",
	[2837 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"123",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"bar"] v2:[TestMatch switchNormal:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EParenthesis:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"bar"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[2874 copy], @"min",
	[2879 copy], @"max",
	nil] copy], @"pos",
	nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[2873 copy], @"min",
	[2880 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"124",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"bar"] v2:[TestMatch switchNormal:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EUntyped:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"bar"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[2924 copy], @"min",
	[2929 copy], @"max",
	nil] copy], @"pos",
	nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[2916 copy], @"min",
	[2929 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"125",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"foo"] v2:[TestMatch switchNormal:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EField:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CIdent:[NSMutableString stringWithString:@"null"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[2965 copy], @"min",
	[2969 copy], @"max",
	nil] copy], @"pos",
	nil] field:[NSMutableString stringWithString:@"foo"]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[2965 copy], @"min",
	[2973 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"126",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"22"] v2:[TestMatch switchNormal:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EArray:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CIdent:[NSMutableString stringWithString:@"null"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3008 copy], @"min",
	[3012 copy], @"max",
	nil] copy], @"pos",
	nil] e2:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CInt:[NSMutableString stringWithString:@"22"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3013 copy], @"min",
	[3015 copy], @"max",
	nil] copy], @"pos",
	nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3008 copy], @"min",
	[3016 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"127",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"22.5"] v2:[TestMatch switchNormal:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EArray:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CIdent:[NSMutableString stringWithString:@"null"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3053 copy], @"min",
	[3057 copy], @"max",
	nil] copy], @"pos",
	nil] e2:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CFloat:[NSMutableString stringWithString:@"22.5"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3058 copy], @"min",
	[3062 copy], @"max",
	nil] copy], @"pos",
	nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3053 copy], @"min",
	[3063 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"128",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"EConst(CInt(0))"] v2:[TestMatch switchNormal:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EIn:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CInt:[NSMutableString stringWithString:@"1"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3111 copy], @"min",
	[3112 copy], @"max",
	nil] copy], @"pos",
	nil] e2:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CInt:[NSMutableString stringWithString:@"0"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3116 copy], @"min",
	[3117 copy], @"max",
	nil] copy], @"pos",
	nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3111 copy], @"min",
	[3117 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"129",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"not_found"] v2:[TestMatch switchNormal:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EArray:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CIdent:[NSMutableString stringWithString:@"null"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3159 copy], @"min",
	[3163 copy], @"max",
	nil] copy], @"pos",
	nil] e2:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"22"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3164 copy], @"min",
	[3168 copy], @"max",
	nil] copy], @"pos",
	nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3159 copy], @"min",
	[3169 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"130",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self t:nil != [TestMatch switchCapture:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"foobar"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3208 copy], @"min",
	[3216 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"132",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self t:nil == [TestMatch switchCapture:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"fooba"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3253 copy], @"min",
	[3260 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"133",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self t:nil != [TestMatch switchCapture:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CInt:[NSMutableString stringWithString:@"9"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3297 copy], @"min",
	[3298 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"134",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self t:nil == [TestMatch switchCapture:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CInt:[NSMutableString stringWithString:@"10"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3335 copy], @"min",
	[3337 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"135",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"[]"] v2:[TestMatch switchArray:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EArrayDecl:[[NSMutableArray alloc] initWithObjects:, nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3373 copy], @"min",
	[3375 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"137",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"_"] v2:[TestMatch switchArray:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CInt:[NSMutableString stringWithString:@"2"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3408 copy], @"min",
	[3409 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"138",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"[EConst(CInt(22))]"] v2:[TestMatch switchArray:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EArrayDecl:[[NSMutableArray alloc] initWithObject:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CInt:[NSMutableString stringWithString:@"22"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[[NSNumber numberWithInt:3460] copy], @"min",
	[[NSNumber numberWithInt:3462] copy], @"max",
	nil] copy], @"pos",
	nil]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3459 copy], @"min",
	[3463 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"139",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"[EConst(CInt(22)),EConst(CString(foo))]"] v2:[TestMatch switchArray:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EArrayDecl:[[NSMutableArray alloc] initWithObjects:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CInt:[NSMutableString stringWithString:@"22"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[[NSNumber numberWithInt:3535] copy], @"min",
	[[NSNumber numberWithInt:3537] copy], @"max",
	nil] copy], @"pos",
	nil], [NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"foo"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[[NSNumber numberWithInt:3538] copy], @"min",
	[[NSNumber numberWithInt:3543] copy], @"max",
	nil] copy], @"pos",
	nil], nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3534 copy], @"min",
	[3544 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"140",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"_"] v2:[TestMatch switchArray:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EArrayDecl:[[NSMutableArray alloc] initWithObjects:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CInt:[NSMutableString stringWithString:@"22"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[[NSNumber numberWithInt:3578] copy], @"min",
	[[NSNumber numberWithInt:3580] copy], @"max",
	nil] copy], @"pos",
	nil], [NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"foo"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[[NSNumber numberWithInt:3582] copy], @"min",
	[[NSNumber numberWithInt:3587] copy], @"max",
	nil] copy], @"pos",
	nil], [NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"bar"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[[NSNumber numberWithInt:3589] copy], @"min",
	[[NSNumber numberWithInt:3594] copy], @"max",
	nil] copy], @"pos",
	nil], nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3577 copy], @"min",
	[3595 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"141",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"0"] v2:[TestMatch switchArray2:[[NSMutableArray alloc] initWithObjects:[NSMutableString stringWithString:@"a"], [NSMutableString stringWithString:@"b"], nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"143",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"1"] v2:[TestMatch switchArray2:[[NSMutableArray alloc] initWithObject:[NSMutableString stringWithString:@"a"]]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"144",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"2"] v2:[TestMatch switchArray2:[[NSMutableArray alloc] initWithObject:[NSMutableString stringWithString:@"b"]]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"145",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"3:c"] v2:[TestMatch switchArray2:[[NSMutableArray alloc] initWithObject:[NSMutableString stringWithString:@"c"]]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"146",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"4:a,a"] v2:[TestMatch switchArray2:[[NSMutableArray alloc] initWithObjects:[NSMutableString stringWithString:@"a"], [NSMutableString stringWithString:@"a"], nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"147",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"4:b,a"] v2:[TestMatch switchArray2:[[NSMutableArray alloc] initWithObjects:[NSMutableString stringWithString:@"b"], [NSMutableString stringWithString:@"a"], nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"148",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"5:3"] v2:[TestMatch switchArray2:[[NSMutableArray alloc] initWithObjects:[NSMutableString stringWithString:@"a"], [NSMutableString stringWithString:@"a"], [NSMutableString stringWithString:@"a"], nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"149",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"6"] v2:[TestMatch switchArray2:[[NSMutableArray alloc] initWithObjects:, nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"150",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"7"] v2:[TestMatch switchArray2:[[NSMutableArray alloc] initWithObjects:[NSMutableString stringWithString:@"a"], [NSMutableString stringWithString:@"a"], [NSMutableString stringWithString:@"a"], [NSMutableString stringWithString:@"b"], nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"151",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"EConst(CString(foobar)):12"] v2:[TestMatch switchCrazy:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EUntyped:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EParenthesis:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EArray:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"foobar"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[4008 copy], @"min",
	[4016 copy], @"max",
	nil] copy], @"pos",
	nil] e2:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CInt:[NSMutableString stringWithString:@"12"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[4017 copy], @"min",
	[4019 copy], @"max",
	nil] copy], @"pos",
	nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[4008 copy], @"min",
	[4020 copy], @"max",
	nil] copy], @"pos",
	nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[4007 copy], @"min",
	[4021 copy], @"max",
	nil] copy], @"pos",
	nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[3999 copy], @"min",
	[4021 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"153",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"1"] v2:[TestMatch switchGuard:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"foobar"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[4056 copy], @"min",
	[4064 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"155",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"2"] v2:[TestMatch switchGuard:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"barfoo"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[4097 copy], @"min",
	[4105 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"156",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"3"] v2:[TestMatch switchGuard:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CInt:[NSMutableString stringWithString:@"2"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[4138 copy], @"min",
	[4139 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"157",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"4"] v2:[TestMatch switchGuard:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CInt:[NSMutableString stringWithString:@"5"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[4172 copy], @"min",
	[4173 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"158",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"4"] v2:[TestMatch switchGuard:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EConst:[ CString:[NSMutableString stringWithString:@"bazfoo"]]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[4206 copy], @"min",
	[4214 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"159",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"5"] v2:[TestMatch switchGuard:(id)[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[ EArrayDecl:[[NSMutableArray alloc] initWithObjects:, nil]] copy], @"expr",
	[[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"haxe/tests/unit/TestMatch.hx"] copy], @"file",
	[4247 copy], @"min",
	[4249 copy], @"max",
	nil] copy], @"pos",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"160",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"0"] v2:((NSMutableString)($this:(snd ctx.path)) BOOL _g = YES; int _g1 = 1; 
	NSMutableString *_g2 = [NSMutableString stringWithString:@"foo"]
	__r__ = ((NSMutableString)($this:(snd ctx.path)) switch (_g){
		case YES:{
			__r__2 = ((id)($this:(snd ctx.path)) switch (_g1){
				case 1:{
					__r__3 = ((id)($this:(snd ctx.path)) switch (_g2){
						case [NSMutableString stringWithString:@"foo"]:{
							__r__4 = [NSMutableString stringWithString:@"0"]}break;
						default:{
							__r__4 = [NSMutableString stringWithString:@"1"]}break;
					}
					return __r__4{
						
						id* __r__4}
					}(__self))}break;
				default:{
					__r__3 = [NSMutableString stringWithString:@"_"]}break;
			}
			return __r__3{
				
				id* __r__3}
			}(__self))}break;
		default:{
			__r__2 = [NSMutableString stringWithString:@"_"]}break;
	}
	return __r__2{
		
		NSMutableString* __r__2}
	}(__self))
	return __r__{
		
		NSMutableString* __r__}
	}(self)) pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"162",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"0"] v2:((NSMutableString)($this:(snd ctx.path)) BOOL _g3 = YES; int _g4 = 1; 
	NSMutableString *_g5 = [NSMutableString stringWithString:@"foo"]
	__r__5 = ((NSMutableString)($this:(snd ctx.path)) switch (_g3){
		case YES:{
			__r__6 = ((id)($this:(snd ctx.path)) switch (_g4){
				case 1:{
					__r__7 = ((id)($this:(snd ctx.path)) switch (_g5){
						case [NSMutableString stringWithString:@"foo"]:{
							__r__8 = [NSMutableString stringWithString:@"0"]}break;
						default:{
							__r__8 = [NSMutableString stringWithString:@"1"]}break;
					}
					return __r__8{
						
						id* __r__8}
					}(__self))}break;
				default:{
					__r__7 = [NSMutableString stringWithString:@"_"]}break;
			}
			return __r__7{
				
				id* __r__7}
			}(__self))}break;
		default:{
			__r__6 = [NSMutableString stringWithString:@"_"]}break;
	}
	return __r__6{
		
		NSMutableString* __r__6}
	}(__self))
	return __r__5{
		
		NSMutableString* __r__5}
	}(self)) pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"168",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"1"] v2:((NSMutableString)($this:(snd ctx.path)) BOOL _g6 = YES; int _g7 = 1; 
	NSMutableString *_g8 = [NSMutableString stringWithString:@"bar"]
	__r__9 = ((NSMutableString)($this:(snd ctx.path)) switch (_g6){
		case YES:{
			__r__10 = ((id)($this:(snd ctx.path)) switch (_g7){
				case 1:{
					__r__11 = ((id)($this:(snd ctx.path)) switch (_g8){
						case [NSMutableString stringWithString:@"foo"]:{
							__r__12 = [NSMutableString stringWithString:@"0"]}break;
						default:{
							__r__12 = [NSMutableString stringWithString:@"1"]}break;
					}
					return __r__12{
						
						id* __r__12}
					}(__self))}break;
				default:{
					__r__11 = [NSMutableString stringWithString:@"_"]}break;
			}
			return __r__11{
				
				id* __r__11}
			}(__self))}break;
		default:{
			__r__10 = [NSMutableString stringWithString:@"_"]}break;
	}
	return __r__10{
		
		NSMutableString* __r__10}
	}(__self))
	return __r__9{
		
		NSMutableString* __r__9}
	}(self)) pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"174",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"_"] v2:((NSMutableString)($this:(snd ctx.path)) BOOL _g9 = NO; int _g10 = 1; 
	NSMutableString *_g11 = [NSMutableString stringWithString:@"foo"]
	__r__13 = ((NSMutableString)($this:(snd ctx.path)) switch (_g9){
		case YES:{
			__r__14 = ((id)($this:(snd ctx.path)) switch (_g10){
				case 1:{
					__r__15 = ((id)($this:(snd ctx.path)) switch (_g11){
						case [NSMutableString stringWithString:@"foo"]:{
							__r__16 = [NSMutableString stringWithString:@"0"]}break;
						default:{
							__r__16 = [NSMutableString stringWithString:@"1"]}break;
					}
					return __r__16{
						
						id* __r__16}
					}(__self))}break;
				default:{
					__r__15 = [NSMutableString stringWithString:@"_"]}break;
			}
			return __r__15{
				
				id* __r__15}
			}(__self))}break;
		default:{
			__r__14 = [NSMutableString stringWithString:@"_"]}break;
	}
	return __r__14{
		
		NSMutableString* __r__14}
	}(__self))
	return __r__13{
		
		NSMutableString* __r__13}
	}(self)) pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"180",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"1"] v2:((NSMutableString)($this:(snd ctx.path)) int _g12 = 1; int _g13 = 2
	__r__17 = ((NSMutableString)($this:(snd ctx.path)) switch (_g12){
		case 0:{
			__r__18 = ((id)($this:(snd ctx.path)) switch (_g13){
				case 0:{
					__r__19 = [NSMutableString stringWithString:@"1"]}break;
				default:{
					__r__19 = [NSMutableString stringWithString:@"_"]}break;
			}
			return __r__19{
				
				id* __r__19}
			}(__self))}break;
		case 1:{
			__r__18 = ((id)($this:(snd ctx.path)) switch (_g13){
				case 2:{
					__r__20 = [NSMutableString stringWithString:@"1"]}break;
				case 1:{
					__r__20 = [NSMutableString stringWithString:@"2"]}break;
				default:{
					__r__20 = [NSMutableString stringWithString:@"_"]}break;
			}
			return __r__20{
				
				id* __r__20}
			}(__self))}break;
		default:{
			__r__18 = [NSMutableString stringWithString:@"_"]}break;
	}
	return __r__18{
		
		NSMutableString* __r__18}
	}(__self))
	return __r__17{
		
		NSMutableString* __r__17}
	}(self)) pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"186",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
	
	TestMatch *t = [ TA:[NSMutableString stringWithString:@"foo"]];
	[self eq:[NSMutableString stringWithString:@"0"] v2:((NSMutableString)($this:(snd ctx.path)) 
	var $e22 : enum =  (t)
	switch ( $e22.index ) {
		
		case 0:
		
		var MATCH t_eTA_0 : id = $e22.params[0]{
			__r__21 = ((id)($this:(snd ctx.path)) switch (t_eTA_0){
				case [NSMutableString stringWithString:@"foo"]:{
					__r__23 = [NSMutableString stringWithString:@"0"]}break;
				default:{
					__r__23 = [NSMutableString stringWithString:@"1"]}break;
			}
			return __r__23{
				
				id* __r__23}
			}(__self))}break
		case 2:
		{
			__r__21 = [NSMutableString stringWithString:@"2"]}break
	}
	return __r__21{
		
		NSMutableString* __r__21}
	}(self)) pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"193",@"lineNumber", @"unit.TestMatch",@"className", @"testBasic",@"methodName", nil]];
}
- (void) testTuple{
	SEL test = ^- (NSMutableString*) :(int)a b:(int)b c:(int)c{
		return ^(NSMutableString*)switch (a){
			case 1:{
				__r__ = ^(id)switch (b){
					case 1:{
						__r__2 = ^(id)switch (c){
							case 2:{
								__r__3 = [[NSMutableString stringWithString:@"0|x:"] stringByAppendingString:a]}break;
							default:{
								__r__3 = [[[[NSMutableString stringWithString:@"2|y:"] stringByAppendingString:b] stringByAppendingString:[NSMutableString stringWithString:@",z:"]] stringByAppendingString:c]}break;
						}
						return __r__3{
							
							id* __r__3}
						}()}break;
					case 2:{
						__r__2 = [[NSMutableString stringWithString:@"0|x:"] stringByAppendingString:c]}break;
					case 3:{
						__r__2 = ^(id)switch (c){
							case 2:{
								__r__4 = [[NSMutableString stringWithString:@"0|x:"] stringByAppendingString:b]}break;
							case 4:{
								__r__4 = [[NSMutableString stringWithString:@"1|z:"] stringByAppendingString:a]}break;
							default:{
								__r__4 = [[[[NSMutableString stringWithString:@"2|y:"] stringByAppendingString:b] stringByAppendingString:[NSMutableString stringWithString:@",z:"]] stringByAppendingString:c]}break;
						}
						return __r__4{
							
							id* __r__4}
						}()}break;
					default:{
						__r__2 = ^(id)switch (c){
							case 2:{
								__r__5 = [[NSMutableString stringWithString:@"0|x:"] stringByAppendingString:b]}break;
							default:{
								__r__5 = [[[[NSMutableString stringWithString:@"2|y:"] stringByAppendingString:b] stringByAppendingString:[NSMutableString stringWithString:@",z:"]] stringByAppendingString:c]}break;
						}
						return __r__5{
							
							id* __r__5}
						}()}break;
				}
				return __r__2{
					
					id* __r__2}
				}()}break;
			case 3:{
				__r__ = ^(id)switch (b){
					case 1:{
						__r__6 = ^(id)switch (c){
							case 2:{
								__r__7 = [[NSMutableString stringWithString:@"0|x:"] stringByAppendingString:a]}break;
							case 4:{
								__r__7 = [[NSMutableString stringWithString:@"1|z:"] stringByAppendingString:b]}break;
							default:{
								__r__7 = [[[[[[NSMutableString stringWithString:@"_:x:"] stringByAppendingString:a] stringByAppendingString:[NSMutableString stringWithString:@",y:"]] stringByAppendingString:b] stringByAppendingString:[NSMutableString stringWithString:@",z:"]] stringByAppendingString:c]}break;
						}
						return __r__7{
							
							id* __r__7}
						}()}break;
					case 4:{
						__r__6 = [[NSMutableString stringWithString:@"1|z:"] stringByAppendingString:c]}break;
					case 3:{
						__r__6 = ^(id)switch (c){
							case 4:{
								__r__8 = [[NSMutableString stringWithString:@"1|z:"] stringByAppendingString:a]}break;
							default:{
								__r__8 = [[[[[[NSMutableString stringWithString:@"_:x:"] stringByAppendingString:a] stringByAppendingString:[NSMutableString stringWithString:@",y:"]] stringByAppendingString:b] stringByAppendingString:[NSMutableString stringWithString:@",z:"]] stringByAppendingString:c]}break;
						}
						return __r__8{
							
							id* __r__8}
						}()}break;
					default:{
						__r__6 = ^(id)switch (c){
							case 4:{
								__r__9 = [[NSMutableString stringWithString:@"1|z:"] stringByAppendingString:b]}break;
							default:{
								__r__9 = [[[[[[NSMutableString stringWithString:@"_:x:"] stringByAppendingString:a] stringByAppendingString:[NSMutableString stringWithString:@",y:"]] stringByAppendingString:b] stringByAppendingString:[NSMutableString stringWithString:@",z:"]] stringByAppendingString:c]}break;
						}
						return __r__9{
							
							id* __r__9}
						}()}break;
				}
				return __r__6{
					
					id* __r__6}
				}()}break;
			case 2:{
				__r__ = ^(id)switch (b){
					case 1:{
						__r__10 = ^(id)switch (c){
							case 2:{
								__r__11 = [[NSMutableString stringWithString:@"0|x:"] stringByAppendingString:a]}break;
							default:{
								__r__11 = [[[[NSMutableString stringWithString:@"2|y:"] stringByAppendingString:c] stringByAppendingString:[NSMutableString stringWithString:@",z:"]] stringByAppendingString:b]}break;
						}
						return __r__11{
							
							id* __r__11}
						}()}break;
					case 3:{
						__r__10 = ^(id)switch (c){
							case 4:{
								__r__12 = [[NSMutableString stringWithString:@"1|z:"] stringByAppendingString:a]}break;
							default:{
								__r__12 = [[[[NSMutableString stringWithString:@"2|y:"] stringByAppendingString:c] stringByAppendingString:[NSMutableString stringWithString:@",z:"]] stringByAppendingString:b]}break;
						}
						return __r__12{
							
							id* __r__12}
						}()}break;
					default:{
						__r__10 = [[[[NSMutableString stringWithString:@"2|y:"] stringByAppendingString:c] stringByAppendingString:[NSMutableString stringWithString:@",z:"]] stringByAppendingString:b]}break;
				}
				return __r__10{
					
					id* __r__10}
				}()}break;
			default:{
				__r__ = ^(id)switch (b){
					case 1:{
						__r__13 = ^(id)switch (c){
							case 2:{
								__r__14 = [[NSMutableString stringWithString:@"0|x:"] stringByAppendingString:a]}break;
							default:{
								__r__14 = [[[[[[NSMutableString stringWithString:@"_:x:"] stringByAppendingString:a] stringByAppendingString:[NSMutableString stringWithString:@",y:"]] stringByAppendingString:b] stringByAppendingString:[NSMutableString stringWithString:@",z:"]] stringByAppendingString:c]}break;
						}
						return __r__14{
							
							id* __r__14}
						}()}break;
					case 3:{
						__r__13 = ^(id)switch (c){
							case 4:{
								__r__15 = [[NSMutableString stringWithString:@"1|z:"] stringByAppendingString:a]}break;
							default:{
								__r__15 = [[[[[[NSMutableString stringWithString:@"_:x:"] stringByAppendingString:a] stringByAppendingString:[NSMutableString stringWithString:@",y:"]] stringByAppendingString:b] stringByAppendingString:[NSMutableString stringWithString:@",z:"]] stringByAppendingString:c]}break;
						}
						return __r__15{
							
							id* __r__15}
						}()}break;
					default:{
						__r__13 = [[[[[[NSMutableString stringWithString:@"_:x:"] stringByAppendingString:a] stringByAppendingString:[NSMutableString stringWithString:@",y:"]] stringByAppendingString:b] stringByAppendingString:[NSMutableString stringWithString:@",z:"]] stringByAppendingString:c]}break;
				}
				return __r__13{
					
					id* __r__13}
				}()}break;
		}
		return __r__{
			
			NSMutableString* __r__}
		}();
	}
	[self eq:[NSMutableString stringWithString:@"0|x:9"] v2:[test:9 b:1 c:2] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"207",@"lineNumber", @"unit.TestMatch",@"className", @"testTuple",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"0|x:9"] v2:[test:1 b:2 c:9] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"208",@"lineNumber", @"unit.TestMatch",@"className", @"testTuple",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"0|x:9"] v2:[test:1 b:9 c:2] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"209",@"lineNumber", @"unit.TestMatch",@"className", @"testTuple",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"1|z:12"] v2:[test:3 b:4 c:12] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"210",@"lineNumber", @"unit.TestMatch",@"className", @"testTuple",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"1|z:12"] v2:[test:12 b:3 c:4] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"211",@"lineNumber", @"unit.TestMatch",@"className", @"testTuple",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"1|z:12"] v2:[test:3 b:12 c:4] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"212",@"lineNumber", @"unit.TestMatch",@"className", @"testTuple",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"2|y:9,z:8"] v2:[test:1 b:9 c:8] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"213",@"lineNumber", @"unit.TestMatch",@"className", @"testTuple",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"2|y:9,z:8"] v2:[test:2 b:8 c:9] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"214",@"lineNumber", @"unit.TestMatch",@"className", @"testTuple",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"_:x:9,y:8,z:7"] v2:[test:9 b:8 c:7] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"215",@"lineNumber", @"unit.TestMatch",@"className", @"testTuple",@"methodName", nil]];
}
- (void) testGrouping{
	SEL test = ^- (NSMutableString*) :(int)v{
		return ^(NSMutableString*)switch (v){
			case 1:case 2:case 3:{
				__r__ = [NSMutableString stringWithString:@"0"]}break;
			case 4:{
				__r__ = ( (v == 5) ? [NSMutableString stringWithString:@"1"] : [NSMutableString stringWithString:@"2"])}break;
			case 5:{
				__r__ = ( (v == 5) ? [NSMutableString stringWithString:@"1"] : [NSMutableString stringWithString:@"2"])}break;
			case 6:{
				__r__ = ( (v == 5) ? [NSMutableString stringWithString:@"1"] : [NSMutableString stringWithString:@"2"])}break;
			case 8:case 9:{
				__r__ = [NSMutableString stringWithString:@"3"]}break;
			default:{
				__r__ = [[NSMutableString stringWithString:@"_:"] stringByAppendingString:v]}break;
		}
		return __r__{
			
			NSMutableString* __r__}
		}();
	}
	
	NSMutableArray *results = [[NSMutableArray alloc] initWithObjects:[NSMutableString stringWithString:@"_:0"], [NSMutableString stringWithString:@"0"], [NSMutableString stringWithString:@"0"], [NSMutableString stringWithString:@"0"], [NSMutableString stringWithString:@"2"], [NSMutableString stringWithString:@"1"], [NSMutableString stringWithString:@"2"], [NSMutableString stringWithString:@"_:7"], [NSMutableString stringWithString:@"3"], [NSMutableString stringWithString:@"3"], [NSMutableString stringWithString:@"_:10"], nil];
	{
		int _g1 = 0; int _g = results.length;
		while (_g1 < _g) {
			int i = _g1++;
			[self eq:[results hx_objectAtIndex:i] v2:[test:i] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"228",@"lineNumber", @"unit.TestMatch",@"className", @"testGrouping",@"methodName", nil]];
		}
	}
}
- (void) testSubtyping{
	
	InitBase *c = [[InitBase alloc] init];
	
	NSMutableString *r = ((NSMutableString)($this:(snd ctx.path)) switch (c.s){
		case [NSMutableString stringWithString:@"foo"]:{
			__r__ = [NSMutableString stringWithString:@"s = foo"]}break;
		default:{
			__r__ = [NSMutableString stringWithString:@"_"]}break;
	}
	return __r__{
		
		NSMutableString* __r__}
	}(self));
	[self eq:[NSMutableString stringWithString:@"s = foo"] v2:r pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"240",@"lineNumber", @"unit.TestMatch",@"className", @"testSubtyping",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"0"] v2:[TestMatch switchStructure:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"val1"] copy], @"foo",
	[[NSMutableString stringWithString:@"val2"] copy], @"bar",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"242",@"lineNumber", @"unit.TestMatch",@"className", @"testSubtyping",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"1"] v2:[TestMatch switchStructure:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"val1"] copy], @"foo",
	[[NSMutableString stringWithString:@"val1"] copy], @"bar",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"243",@"lineNumber", @"unit.TestMatch",@"className", @"testSubtyping",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"2"] v2:[TestMatch switchStructure:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"val2"] copy], @"foo",
	[[NSMutableString stringWithString:@"val2"] copy], @"bar",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"244",@"lineNumber", @"unit.TestMatch",@"className", @"testSubtyping",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"val1"] v2:[TestMatch switchStructure:[NSMutableDictionary dictionaryWithObjectsAndKeys:
	[[NSMutableString stringWithString:@"val2"] copy], @"foo",
	[[NSMutableString stringWithString:@"val1"] copy], @"bar",
	nil]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"245",@"lineNumber", @"unit.TestMatch",@"className", @"testSubtyping",@"methodName", nil]];
}
- (void) testGadt{
	[self eq:[NSMutableString stringWithString:@"<=1"] v2:[TestMatch toStringX:[ U1:1]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"258",@"lineNumber", @"unit.TestMatch",@"className", @"testGadt",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@">1"] v2:[TestMatch toStringX:[ U1:2]] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"259",@"lineNumber", @"unit.TestMatch",@"className", @"testGadt",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"U2"] v2:[TestMatch toStringX: U2] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"260",@"lineNumber", @"unit.TestMatch",@"className", @"testGadt",@"methodName", nil]];
}
- (void) testClassSwitch{
	[self eq:[NSMutableString stringWithString:@"String"] v2:[TestMatch switchClass:NSMutableString] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"264",@"lineNumber", @"unit.TestMatch",@"className", @"testClassSwitch",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"unit.MyClass"] v2:[TestMatch switchClass:MyClass] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"265",@"lineNumber", @"unit.TestMatch",@"className", @"testClassSwitch",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"other: unit.TestMatch"] v2:[TestMatch switchClass:TestMatch] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"266",@"lineNumber", @"unit.TestMatch",@"className", @"testClassSwitch",@"methodName", nil]];
}
- (void) testNonExhaustiveness{
	[self eq:[NSMutableString stringWithString:@"Unmatched patterns: false"] v2:[NSMutableString stringWithString:@"Unmatched patterns: false"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"270",@"lineNumber", @"unit.TestMatch",@"className", @"testNonExhaustiveness",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"Unmatched patterns: OpNegBits | OpNeg"] v2:[NSMutableString stringWithString:@"Unmatched patterns: OpNegBits | OpNeg"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"273",@"lineNumber", @"unit.TestMatch",@"className", @"testNonExhaustiveness",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"Unmatched patterns: Node(Leaf(_),_)"] v2:[NSMutableString stringWithString:@"Unmatched patterns: Node(Leaf(_),_)"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"278",@"lineNumber", @"unit.TestMatch",@"className", @"testNonExhaustiveness",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"Unmatched patterns: Leaf"] v2:[NSMutableString stringWithString:@"Unmatched patterns: Leaf"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"282",@"lineNumber", @"unit.TestMatch",@"className", @"testNonExhaustiveness",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"Unmatched patterns: Leaf(_)"] v2:[NSMutableString stringWithString:@"Unmatched patterns: Leaf(_)"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"286",@"lineNumber", @"unit.TestMatch",@"className", @"testNonExhaustiveness",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"Unmatched patterns: [_,false,_]"] v2:[NSMutableString stringWithString:@"Unmatched patterns: [_,false,_]"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"290",@"lineNumber", @"unit.TestMatch",@"className", @"testNonExhaustiveness",@"methodName", nil]];
}
- (void) testInvalidBinding{
	[self eq:[NSMutableString stringWithString:@"Variable y must appear exactly once in each sub-pattern"] v2:[NSMutableString stringWithString:@"Variable y must appear exactly once in each sub-pattern"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"296",@"lineNumber", @"unit.TestMatch",@"className", @"testInvalidBinding",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"Variable y must appear exactly once in each sub-pattern"] v2:[NSMutableString stringWithString:@"Variable y must appear exactly once in each sub-pattern"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"299",@"lineNumber", @"unit.TestMatch",@"className", @"testInvalidBinding",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"Variable x must appear exactly once in each sub-pattern"] v2:[NSMutableString stringWithString:@"Variable x must appear exactly once in each sub-pattern"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"302",@"lineNumber", @"unit.TestMatch",@"className", @"testInvalidBinding",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"Variable l must appear exactly once in each sub-pattern"] v2:[NSMutableString stringWithString:@"Variable l must appear exactly once in each sub-pattern"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"305",@"lineNumber", @"unit.TestMatch",@"className", @"testInvalidBinding",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"Variable l must appear exactly once in each sub-pattern"] v2:[NSMutableString stringWithString:@"Variable l must appear exactly once in each sub-pattern"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"308",@"lineNumber", @"unit.TestMatch",@"className", @"testInvalidBinding",@"methodName", nil]];
	[self eq:[NSMutableString stringWithString:@"String should be unit.Tree<String>"] v2:[NSMutableString stringWithString:@"String should be unit.Tree<String>"] pos:[NSDictionary dictionaryWithObjectsAndKeys:@"TestMatch.hx",@"fileName", @"311",@"lineNumber", @"unit.TestMatch",@"className", @"testInvalidBinding",@"methodName", nil]];
}
- (id) init{
	self = [super init];
	return self;
}

@end
